('shape', (13233, 4096))
('williams shape', (13233,))
('CV for PCA', 1)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05093503, 0.051018  , 0.09088016]), 'fit_time': array([0.03696203, 0.03801608, 0.05170202]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05297184, 0.08199215, 0.08447409]), 'fit_time': array([0.04034615, 0.06939006, 0.03769994]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.12865305, 0.24724603, 0.25071597]), 'fit_time': array([0.19939208, 0.09532499, 0.20188594]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.15534687, 0.09050894, 0.15025401]), 'fit_time': array([0.24675107, 0.14156294, 0.11931705]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.05274582, 0.0998652 , 0.10208392]), 'fit_time': array([0.04439497, 0.11181498, 0.10750699]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.04944491, 0.03180099, 0.05145884]), 'fit_time': array([0.04681706, 0.03110886, 0.04774022]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.04964805, 0.04429483, 0.04042602]), 'fit_time': array([0.05885196, 0.06422305, 0.04209399]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.24740601, 0.29249597, 0.33927202]), 'fit_time': array([0.15129995, 0.39555407, 0.51294208]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.35736585, 0.14874101, 0.15848088]), 'fit_time': array([0.7216332 , 0.261549  , 0.34673691]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.87557387, 0.52591395, 0.97609615]), 'fit_time': array([0.81497407, 1.95551205, 1.02075005]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.038167  , 0.03364897, 0.03758502]), 'fit_time': array([0.04843307, 0.03397417, 0.08632803]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05092502, 0.08189702, 0.04021597]), 'fit_time': array([0.07612395, 0.17722082, 0.05874491]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.16552711, 0.21057606, 0.27980399]), 'fit_time': array([0.41978002, 0.34680915, 0.66066504]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.15085888, 0.45561004, 0.21955109]), 'fit_time': array([1.18407917, 1.86103892, 0.76282096]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.25971603, 0.445683  , 0.35135794]), 'fit_time': array([3.73185992, 1.33361793, 1.97442007]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03270602, 0.03512907, 0.035882  ]), 'fit_time': array([0.05180287, 0.07447982, 0.06179285]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03875113, 0.07884812, 0.224828  ]), 'fit_time': array([0.05132794, 0.15323687, 0.20515895]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.45690298, 0.06994295, 0.07122087]), 'fit_time': array([1.01384282, 1.15058899, 0.37087512]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.30504704, 0.18451023, 0.13825607]), 'fit_time': array([2.04564404, 2.41180182, 0.60113502]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.34984779, 0.211797  , 0.46688294]), 'fit_time': array([3.01644301, 1.57816601, 2.85907197]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.0628469 , 0.06063795, 0.05772305]), 'fit_time': array([0.12439704, 0.05371809, 0.1492219 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.04339814, 0.04279017, 0.04471898]), 'fit_time': array([0.18095493, 0.15799499, 0.07333589]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06379199, 0.08569598, 0.06974006]), 'fit_time': array([0.40387416, 0.25933409, 0.66296506]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.1215198 , 0.26845098, 0.38929915]), 'fit_time': array([1.26372504, 1.85185814, 3.58603787]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.18781185, 0.20072722, 0.78292084]), 'fit_time': array([2.78021812, 1.7309258 , 1.56870008]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.11686301, 0.11368299, 0.03491282]), 'fit_time': array([0.13740993, 0.12411118, 0.17565918]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.04515791, 0.04211783, 0.0440681 ]), 'fit_time': array([0.45877814, 0.23218799, 0.12820292]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.07688713, 0.08136606, 0.14596295]), 'fit_time': array([0.56225681, 0.22357392, 0.80439591]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11262989, 0.42511296, 0.10254383]), 'fit_time': array([2.40683103, 2.553478  , 2.56073809]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.18991184, 0.43919396, 0.21358705]), 'fit_time': array([2.07936001, 3.03060699, 2.37806702]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03449607, 0.03368306, 0.03439593]), 'fit_time': array([0.09345102, 0.06013799, 0.092803  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03878593, 0.04526591, 0.04098797]), 'fit_time': array([0.46619701, 0.221457  , 0.21127415]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06648493, 0.07317305, 0.07280898]), 'fit_time': array([0.87402296, 0.40169406, 1.01435685]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11642098, 0.11988902, 0.11932015]), 'fit_time': array([1.59982204, 3.0933969 , 1.15314889]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.18750286, 0.18130517, 0.21014094]), 'fit_time': array([2.16214108, 3.24802899, 2.07074213]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03335905, 0.03411293, 0.03509116]), 'fit_time': array([0.099226  , 0.05738902, 0.11236882]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.04299402, 0.03276587, 0.04381299]), 'fit_time': array([0.75590515, 0.16993117, 0.25936103]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.0722661 , 0.06440711, 0.07016802]), 'fit_time': array([0.70012093, 0.52012086, 0.90735292]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.41487408, 0.19538307, 0.1215241 ]), 'fit_time': array([3.70071387, 4.60419083, 1.24916983]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.40051007, 0.1798861 , 0.20698094]), 'fit_time': array([2.54042482, 3.06284094, 2.60661316]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03329992, 0.0345521 , 0.03605795]), 'fit_time': array([0.10430193, 0.10223603, 0.08816504]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03668594, 0.04173589, 0.03903389]), 'fit_time': array([0.52103996, 0.13421702, 0.28821301]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10623407, 0.21838999, 0.10053396]), 'fit_time': array([1.5803988 , 0.60231018, 2.03220987]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11226392, 0.11189389, 0.11678696]), 'fit_time': array([2.21510816, 1.73313618, 1.44950891]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.1741221 , 0.4106369 , 0.18031812]), 'fit_time': array([1.86766505, 3.70473099, 2.26549292]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.0353682 , 0.03338599, 0.03286386]), 'fit_time': array([0.07963681, 0.11643815, 0.0754931 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03604412, 0.04248881, 0.03925204]), 'fit_time': array([0.63697386, 0.28506398, 0.09904313]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06800008, 0.06247091, 0.07382488]), 'fit_time': array([0.27181911, 0.46889901, 1.1912272 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11728382, 0.12688994, 0.10924196]), 'fit_time': array([1.63032913, 2.16324806, 1.62021112]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.15623999, 0.16438985, 0.18456006]), 'fit_time': array([2.29068708, 2.70796514, 2.54301906]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03460813, 0.03206301, 0.03430796]), 'fit_time': array([0.15037799, 0.09235692, 0.06822991]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.04102302, 0.03888893, 0.04485297]), 'fit_time': array([0.26410508, 0.08773208, 0.0895021 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.11742806, 0.08907795, 0.06800389]), 'fit_time': array([1.51035786, 1.09607816, 2.57144403]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11644506, 0.10660386, 0.24747896]), 'fit_time': array([2.91812396, 2.51853704, 1.8276751 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.30437803, 0.17059588, 0.1810329 ]), 'fit_time': array([3.89426899, 2.10333419, 2.17301106]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.033288  , 0.03327107, 0.0349319 ]), 'fit_time': array([0.09207916, 0.13548708, 0.11804891]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.04210091, 0.04325104, 0.04285812]), 'fit_time': array([0.66722798, 0.22163606, 0.21069193]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.07033896, 0.06260014, 0.06069088]), 'fit_time': array([0.66361213, 0.56844282, 1.73034215]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11951685, 0.12284994, 0.10405588]), 'fit_time': array([2.11554003, 2.42210507, 1.67037106]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.18271685, 0.15634704, 0.17474699]), 'fit_time': array([2.95903707, 4.4221139 , 2.88589311]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03622699, 0.03542709, 0.03430605]), 'fit_time': array([0.05289793, 0.16682386, 0.04724097]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03774905, 0.03742504, 0.04819489]), 'fit_time': array([0.22849011, 0.40803218, 0.67020798]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05471706, 0.06043983, 0.06375813]), 'fit_time': array([0.75455689, 0.58901   , 1.84412003]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.25974202, 0.12609196, 0.09939003]), 'fit_time': array([4.72336006, 2.14330602, 2.39720392]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.15756702, 0.39506483, 0.2534101 ]), 'fit_time': array([2.10144997, 3.32400513, 5.44385695]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03454208, 0.033674  , 0.0380249 ]), 'fit_time': array([0.15823388, 0.23323298, 0.1464951 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03640199, 0.0438199 , 0.04235911]), 'fit_time': array([0.95636702, 0.27122998, 0.5224309 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06519103, 0.06036592, 0.11571312]), 'fit_time': array([0.76665807, 1.28235602, 1.56738901]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.2815361 , 0.19298196, 0.10184097]), 'fit_time': array([4.78065085, 3.75836515, 1.43466997]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.15762401, 0.15504098, 0.1663301 ]), 'fit_time': array([2.89745307, 3.75729799, 3.13488698]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.07151389, 0.11536503, 0.04889512]), 'fit_time': array([0.39110708, 0.32743311, 0.27255106]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07913804, 0.06914306, 0.08979988]), 'fit_time': array([0.98870802, 0.78073597, 0.20814705]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.11733508, 0.11721587, 0.06208301]), 'fit_time': array([1.70805597, 1.57893515, 2.96952486]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.08597088, 0.10238791, 0.14530706]), 'fit_time': array([2.62893414, 3.41138601, 1.50045395]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.14734793, 0.143641  , 0.17544293]), 'fit_time': array([2.21850896, 3.67829919, 2.4336791 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03089285, 0.03561997, 0.03302693]), 'fit_time': array([0.2315712 , 0.18645597, 0.11853004]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03958917, 0.04032493, 0.04019117]), 'fit_time': array([0.99502206, 0.38146806, 0.36501598]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06683493, 0.05068588, 0.06691003]), 'fit_time': array([0.82302999, 0.9447372 , 1.64495111]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.10692406, 0.10078979, 0.09751606]), 'fit_time': array([1.80518007, 3.35953999, 2.03209996]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.13170505, 0.12714481, 0.16397786]), 'fit_time': array([2.74920797, 3.14295101, 4.24747205]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03348398, 0.03183913, 0.03444386]), 'fit_time': array([0.19021201, 0.27206492, 0.17234516]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03996587, 0.04066801, 0.038764  ]), 'fit_time': array([0.62907505, 0.36949682, 0.5669899 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05661297, 0.05741787, 0.04816604]), 'fit_time': array([1.44784594, 1.02811623, 2.25075889]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.18947005, 0.08355284, 0.08610487]), 'fit_time': array([2.64738798, 8.21735811, 2.41162515]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.13696313, 0.13652611, 0.15059996]), 'fit_time': array([3.76015997, 3.85756493, 3.38730407]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03101897, 0.03337598, 0.03235602]), 'fit_time': array([0.32966113, 0.11279702, 0.28528595]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03918695, 0.04363298, 0.04672909]), 'fit_time': array([1.143435  , 0.34214401, 0.16798186]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05218315, 0.088938  , 0.08983302]), 'fit_time': array([1.88270187, 1.91897583, 4.79322815]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07860303, 0.07906318, 0.078269  ]), 'fit_time': array([4.10236192, 4.16267395, 3.46167088]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.12799191, 0.12688398, 0.1249969 ]), 'fit_time': array([3.89880013, 3.97678614, 4.79151511]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03138304, 0.03311801, 0.03551197]), 'fit_time': array([0.20570207, 0.15923905, 0.10817313]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03727293, 0.04153681, 0.03920102]), 'fit_time': array([0.74607897, 0.22291422, 1.06763506]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.04833388, 0.04564381, 0.05182719]), 'fit_time': array([2.23978114, 1.84658813, 2.57085586]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07213998, 0.08212709, 0.06635904]), 'fit_time': array([2.92400098, 3.45342088, 3.72984791]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.20540094, 0.12227201, 0.11492395]), 'fit_time': array([6.34335995, 6.89574504, 4.32873297]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03118801, 0.02986097, 0.03205013]), 'fit_time': array([0.30154204, 0.4510622 , 0.89768887]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03845   , 0.03390884, 0.04092908]), 'fit_time': array([1.35685492, 0.79807806, 1.25363612]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.0513339 , 0.05006099, 0.04311585]), 'fit_time': array([2.1544261 , 1.48189688, 2.80213213]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07035494, 0.08282304, 0.074651  ]), 'fit_time': array([3.18566108, 4.27545094, 3.39343905]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.17203498, 0.10161304, 0.13036513]), 'fit_time': array([7.42193413, 7.94349694, 3.98355985]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.03332806, 0.03580713, 0.0315659 ]), 'fit_time': array([0.22738314, 0.06144285, 0.67063808]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.03257203, 0.03303695, 0.037323  ]), 'fit_time': array([1.54359794, 0.70901489, 0.64301205]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.04085612, 0.04989791, 0.04293418]), 'fit_time': array([1.83790398, 1.15957999, 2.73004103]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05757809, 0.06606603, 0.05749321]), 'fit_time': array([3.88628292, 4.4840498 , 4.18285894]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.242764  , 0.2190721 , 0.10300779]), 'fit_time': array([18.61352301, 13.90311384,  9.50541115]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.10115099, 0.09355688, 0.10332012]), 'fit_time': array([6.49954605, 4.51509714, 8.79382491]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('CV for PCA', 2)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05340314, 0.0570972 , 0.04565978]), 'fit_time': array([0.05727792, 0.05082297, 0.03990412]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05002904, 0.05205202, 0.06297493]), 'fit_time': array([0.04299998, 0.0442121 , 0.05454302]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.09217381, 0.066679  , 0.11517596]), 'fit_time': array([0.08767104, 0.05997682, 0.11088395]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.09421992, 0.10134101, 0.10390687]), 'fit_time': array([0.11908102, 0.11984682, 0.13139915]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.05271888, 0.05155492, 0.05097508]), 'fit_time': array([0.13724804, 0.12079906, 0.12608004]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06582093, 0.09079218, 0.06110382]), 'fit_time': array([0.06236005, 0.08677292, 0.06129122]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12749505, 0.12709308, 0.12123895]), 'fit_time': array([0.12981105, 0.13479304, 0.12772608]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.24464989, 0.19555902, 0.1984539 ]), 'fit_time': array([0.38810205, 0.27595115, 0.37139702]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.15782619, 0.13850379, 0.18344402]), 'fit_time': array([0.28992987, 0.29184318, 0.33338499]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.096416  , 0.08484602, 0.08406401]), 'fit_time': array([0.17128587, 0.2750001 , 0.20663595]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25969696, 0.19987297, 0.27707386]), 'fit_time': array([0.17161298, 0.28436804, 0.1931932 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.27766299, 0.24098086, 0.32549691]), 'fit_time': array([0.48257494, 0.47611213, 0.45732594]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.71582699, 0.39115906, 0.54134202]), 'fit_time': array([1.84432101, 1.18420982, 1.50364399]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.24957418, 0.47164512, 0.35202909]), 'fit_time': array([0.93713784, 1.4623301 , 1.50309396]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.11673093, 0.17994189, 0.0946939 ]), 'fit_time': array([0.2902379 , 0.33029795, 0.26428318]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26488113, 0.23097587, 0.101264  ]), 'fit_time': array([0.44795299, 0.269063  , 0.22133207]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.22147608, 0.16089797, 0.18083692]), 'fit_time': array([1.07772207, 0.45102906, 0.36056209]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.32659793, 0.23360896, 0.236063  ]), 'fit_time': array([1.21190596, 0.90675187, 1.29428196]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.13082194, 0.12872696, 0.11488509]), 'fit_time': array([0.70492315, 0.74159908, 0.88745093]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04922795, 0.0466671 , 0.04931688]), 'fit_time': array([0.14209914, 0.14735889, 0.15666604]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.12639689, 0.13064718, 0.11086392]), 'fit_time': array([0.17705011, 0.20991397, 0.14647603]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.14186883, 0.15633297, 0.16189504]), 'fit_time': array([0.74889803, 0.4692452 , 0.4439168 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.25909901, 0.25282502, 0.21963   ]), 'fit_time': array([1.49313402, 1.24533296, 1.36370802]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11768603, 0.13001204, 0.10495687]), 'fit_time': array([0.89716697, 0.83360004, 0.99725509]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04885697, 0.04711604, 0.04890394]), 'fit_time': array([0.14259291, 0.155195  , 0.15900493]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.12047696, 0.12806487, 0.12506008]), 'fit_time': array([0.24008703, 0.27769494, 0.26777196]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.18353701, 0.132689  , 0.12928605]), 'fit_time': array([1.02791715, 0.43292093, 0.50802994]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.31071901, 0.21027994, 0.25106716]), 'fit_time': array([1.87931609, 1.28654099, 1.68267894]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.11240506, 0.12681603, 0.09256792]), 'fit_time': array([0.95039487, 0.81267786, 0.99629211]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04865193, 0.0475471 , 0.04850578]), 'fit_time': array([0.14197397, 0.15414095, 0.1588161 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10546684, 0.09632111, 0.11365104]), 'fit_time': array([0.22659206, 0.23744988, 0.21657991]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.14116383, 0.12637997, 0.17695284]), 'fit_time': array([1.01326513, 0.52550817, 0.79205012]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.25539279, 0.1945622 , 0.19219303]), 'fit_time': array([2.13463807, 1.5973618 , 1.60589099]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.10306382, 0.11856794, 0.0894959 ]), 'fit_time': array([0.90181518, 1.08275986, 1.08712006]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04829788, 0.04706693, 0.04903698]), 'fit_time': array([0.14576292, 0.1557591 , 0.16253519]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.11399293, 0.09998703, 0.11586213]), 'fit_time': array([0.34450102, 0.22171092, 0.39547992]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.128124  , 0.15907001, 0.19110107]), 'fit_time': array([1.40602207, 0.78916192, 0.69783783]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.3133769 , 0.1987288 , 0.21008897]), 'fit_time': array([2.10164094, 1.88081002, 1.79463005]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.09447289, 0.11116409, 0.08048296]), 'fit_time': array([1.17523408, 1.13821697, 1.13334084]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04880714, 0.04700994, 0.04851508]), 'fit_time': array([0.15069294, 0.15538001, 0.16381884]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.08528495, 0.10713196, 0.10649991]), 'fit_time': array([0.23060107, 0.30132294, 0.3787291 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.13110113, 0.11870289, 0.14673305]), 'fit_time': array([1.07103992, 0.69900894, 1.02473402]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.24406886, 0.22299695, 0.20149302]), 'fit_time': array([2.29798198, 1.64748716, 1.95861197]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.09544206, 0.11202097, 0.07804298]), 'fit_time': array([0.97757316, 1.12103295, 1.32234597]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04908299, 0.04569292, 0.0479269 ]), 'fit_time': array([0.14951587, 0.15545297, 0.16560102]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.11105609, 0.08167887, 0.09974003]), 'fit_time': array([0.29073596, 0.30463815, 0.35935783]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.14231086, 0.10316515, 0.16215014]), 'fit_time': array([1.58267403, 0.62986398, 0.86123204]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.24073815, 0.18356609, 0.20076394]), 'fit_time': array([1.73199105, 2.0277319 , 2.57188988]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.0975709 , 0.10654616, 0.07186103]), 'fit_time': array([1.24923205, 1.10640001, 1.19269204]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04867411, 0.0460031 , 0.04852009]), 'fit_time': array([0.14917803, 0.16350102, 0.16689396]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.1003201 , 0.09935617, 0.10640407]), 'fit_time': array([0.273772  , 0.41857886, 0.3038528 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12179399, 0.12441516, 0.12589884]), 'fit_time': array([1.51057696, 0.87740898, 0.86633301]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.50807786, 0.36490703, 0.41075778]), 'fit_time': array([3.66351295, 4.33559799, 3.42918611]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.14829993, 0.18936682, 0.14138103]), 'fit_time': array([2.25648499, 2.09041214, 1.64073801]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04791522, 0.0454421 , 0.0496521 ]), 'fit_time': array([0.14530587, 0.15786099, 0.17020392]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09616995, 0.10920882, 0.08054805]), 'fit_time': array([0.38688302, 0.51446509, 0.28566384]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12165594, 0.13187599, 0.16418695]), 'fit_time': array([0.92097616, 0.68910003, 1.36108494]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.229774  , 0.21359396, 0.19372582]), 'fit_time': array([2.41641212, 1.9374702 , 2.95387912]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.08303404, 0.10390806, 0.07617188]), 'fit_time': array([1.57998395, 1.32456994, 1.36336708]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04829502, 0.04571295, 0.04779816]), 'fit_time': array([0.15213299, 0.15895009, 0.16972589]), 'test_precision': array([0.07692308, 0.        , 0.        ]), 'test_f1': array([0.06451613, 0.        , 0.        ]), 'test_recall': array([0.05555556, 0.        , 0.        ])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.1293509 , 0.105551  , 0.09176207]), 'fit_time': array([0.46406603, 0.62366199, 0.45380998]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11494589, 0.12484097, 0.11254406]), 'fit_time': array([1.43166208, 0.93699813, 1.66560388]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.22321892, 0.41676903, 0.32335401]), 'fit_time': array([3.71294022, 3.54242396, 5.31655288]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.15313196, 0.16852808, 0.11942291]), 'fit_time': array([3.93278193, 2.271029  , 2.99901605]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04853797, 0.04653406, 0.04790282]), 'fit_time': array([0.23369098, 0.16350603, 0.17021108]), 'test_precision': array([0.07142857, 0.        , 0.        ]), 'test_f1': array([0.0625, 0.    , 0.    ]), 'test_recall': array([0.05555556, 0.        , 0.        ])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.08744717, 0.092098  , 0.07673907]), 'fit_time': array([0.84289694, 0.54904413, 0.75912189]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12939191, 0.100806  , 0.11057806]), 'fit_time': array([2.20516992, 1.59448695, 1.39267993]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.22419882, 0.17911601, 0.20846105]), 'fit_time': array([4.09480309, 2.68599606, 3.91368484]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07315516, 0.09748697, 0.06633806]), 'fit_time': array([1.61932087, 1.69787002, 1.45030308]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04861307, 0.04649305, 0.04889107]), 'fit_time': array([0.154773  , 0.16694689, 0.18292594]), 'test_precision': array([0.07142857, 0.        , 0.05263158]), 'test_f1': array([0.0625    , 0.        , 0.05555556]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.11384702, 0.07771206, 0.11054111]), 'fit_time': array([0.6814189 , 1.08264184, 0.37178493]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12825298, 0.11660099, 0.12457681]), 'fit_time': array([2.63957715, 1.11787105, 2.11456704]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.23262691, 0.18641019, 0.19414687]), 'fit_time': array([4.18555903, 3.09102988, 4.36816502]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06934786, 0.08735013, 0.068084  ]), 'fit_time': array([1.60028291, 1.77111101, 1.59793806]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04761577, 0.04632401, 0.0488131 ]), 'fit_time': array([0.15411711, 0.166857  , 0.18702984]), 'test_precision': array([0.06666667, 0.        , 0.05263158]), 'test_f1': array([0.06060606, 0.        , 0.05555556]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09333301, 0.06372094, 0.09541702]), 'fit_time': array([0.46109796, 1.172364  , 0.72979879]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.08502793, 0.10180616, 0.11423206]), 'fit_time': array([2.59281802, 1.90429091, 1.72438002]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.24293399, 0.19714999, 0.18151903]), 'fit_time': array([4.27870512, 3.51703596, 4.15339708]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07109714, 0.0830462 , 0.06361198]), 'fit_time': array([1.87653089, 1.595788  , 1.75803804]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04730701, 0.04687905, 0.04816294]), 'fit_time': array([0.14988399, 0.17055893, 0.17197418]), 'test_precision': array([0.06666667, 0.        , 0.05555556]), 'test_f1': array([0.06060606, 0.        , 0.05714286]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09038496, 0.05906606, 0.08446598]), 'fit_time': array([0.57463408, 1.35085201, 0.74657702]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11552501, 0.09561515, 0.09690213]), 'fit_time': array([3.6707921 , 1.86037803, 3.43461394]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.46992588, 0.39944792, 0.29431105]), 'fit_time': array([6.22101903, 6.85973501, 8.18719101]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.09429097, 0.084023  , 0.06284094]), 'fit_time': array([2.33136106, 1.78705883, 1.82272506]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04672384, 0.04676104, 0.04763484]), 'fit_time': array([0.15922713, 0.17326784, 0.17263603]), 'test_precision': array([0.06666667, 0.        , 0.05263158]), 'test_f1': array([0.06060606, 0.        , 0.05555556]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.062114  , 0.08179307, 0.07005286]), 'fit_time': array([1.18368411, 0.72247791, 1.16577196]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07452106, 0.09188294, 0.09429002]), 'fit_time': array([5.26374507, 2.83634305, 3.07650113]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.1844399 , 0.14588404, 0.28078389]), 'fit_time': array([8.19623709, 4.9917531 , 7.10634303]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.107939  , 0.13980293, 0.20196605]), 'fit_time': array([3.85234499, 4.56586909, 3.59771991]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.08857489, 0.07958007, 0.07947898]), 'fit_time': array([0.38286901, 0.28539395, 0.26120496]), 'test_precision': array([0.05555556, 0.        , 0.05263158]), 'test_f1': array([0.05555556, 0.        , 0.05555556]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.13185596, 0.06916094, 0.06026602]), 'fit_time': array([2.96058393, 1.88796496, 1.7014699 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.08037019, 0.07195187, 0.0904839 ]), 'fit_time': array([4.54503989, 3.82146907, 4.73817587]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.14071393, 0.13034105, 0.12770391]), 'fit_time': array([10.71221399,  7.91128087,  8.14366198]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05980015, 0.07533789, 0.05536294]), 'fit_time': array([2.34455991, 1.88500094, 2.12157917]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04580593, 0.04747701, 0.04611397]), 'fit_time': array([0.15715313, 0.17992091, 0.17611098]), 'test_precision': array([0.04545455, 0.0625    , 0.05      ]), 'test_f1': array([0.05      , 0.06060606, 0.05405405]), 'test_recall': array([0.05555556, 0.05882353, 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05141282, 0.03755403, 0.05488706]), 'fit_time': array([2.06487799, 2.14245892, 1.8345921 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07737899, 0.07283878, 0.06484604]), 'fit_time': array([5.71694613, 3.89149308, 7.10334778]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.12817478, 0.63844514, 0.11512399]), 'fit_time': array([11.05948019, 20.21537304, 25.95076609]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05860615, 0.06915522, 0.05362201]), 'fit_time': array([2.34403682, 2.8620348 , 1.95691085]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04636216, 0.04629803, 0.04639196]), 'fit_time': array([0.1624248 , 0.18535614, 0.17860699]), 'test_precision': array([0.04166667, 0.05      , 0.05      ]), 'test_f1': array([0.04761905, 0.05405405, 0.05405405]), 'test_recall': array([0.05555556, 0.05882353, 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05588603, 0.05363703, 0.05759096]), 'fit_time': array([3.28233719, 1.5874548 , 2.12100983]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07313204, 0.05411696, 0.06133604]), 'fit_time': array([6.83939314, 5.75326014, 8.11880898]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21543813, 0.10511494, 0.10379601]), 'fit_time': array([20.48831487, 12.36021805, 11.31945682]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05715799, 0.07105398, 0.05450916]), 'fit_time': array([2.47041321, 2.52414513, 1.99934292]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04562998, 0.04612398, 0.04538202]), 'fit_time': array([0.16265297, 0.1865201 , 0.18029785]), 'test_precision': array([0.04      , 0.04761905, 0.04166667]), 'test_f1': array([0.04651163, 0.05263158, 0.04878049]), 'test_recall': array([0.05555556, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.04639912, 0.04478502, 0.04879999]), 'fit_time': array([0.20299792, 0.24180102, 0.26016283]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('CV for PCA', 4)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.07626486, 0.07108307, 0.06905699]), 'fit_time': array([0.08054709, 0.06432891, 0.06403804]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.08339   , 0.078408  , 0.07755709]), 'fit_time': array([0.07356811, 0.06812501, 0.06789184]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.107476  , 0.12354398, 0.12815809]), 'fit_time': array([0.16375089, 0.16675401, 0.17934895]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07444096, 0.07823896, 0.07570887]), 'fit_time': array([0.10417604, 0.09982109, 0.10595512]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([1.96496391, 2.16707897, 2.13126612]), 'fit_time': array([2.53486919, 2.68602705, 2.64267993]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.16798592, 0.14517522, 0.14618707]), 'fit_time': array([0.16365504, 0.13732791, 0.14296484]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20320988, 0.18327713, 0.22125196]), 'fit_time': array([0.26169205, 0.23804402, 0.27564597]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.09005308, 0.1064322 , 0.1138258 ]), 'fit_time': array([0.29122686, 0.37906384, 0.36943603]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.07522488, 0.07816505, 0.07520199]), 'fit_time': array([0.105865  , 0.10670996, 0.10510111]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05022788, 2.20722604, 2.18799782]), 'fit_time': array([2.72368002, 3.03151894, 2.95954704]), 'test_precision': array([0.2       , 0.33333333, 0.09090909]), 'test_f1': array([0.14285714, 0.1       , 0.07142857]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.31593585, 0.2180171 , 0.19408607]), 'fit_time': array([0.358845 , 0.24579  , 0.2253139]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.34731102, 0.26101804, 0.20195985]), 'fit_time': array([0.81707907, 0.66508412, 0.61390114]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06767702, 0.07597208, 0.08465505]), 'fit_time': array([0.42703295, 0.527704  , 0.49956512]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06968784, 0.07197404, 0.07567716]), 'fit_time': array([0.10692906, 0.10651493, 0.11266088]), 'test_precision': array([0.0625    , 0.        , 0.03846154]), 'test_f1': array([0.05882353, 0.        , 0.04651163]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05016398, 2.187711  , 2.15799308]), 'fit_time': array([2.72603202, 2.96182108, 2.94206309]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.29681396, 0.24917698, 0.24388194]), 'fit_time': array([0.48449111, 0.36528802, 0.29077411]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.27964282, 0.24256492, 0.22639704]), 'fit_time': array([1.00672102, 1.056916  , 0.81055284]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.061836  , 0.06791091, 0.07384396]), 'fit_time': array([0.43476391, 0.54990506, 0.52864718]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06882405, 0.06731915, 0.07003307]), 'fit_time': array([0.10841894, 0.10230684, 0.10847807]), 'test_precision': array([0.08333333, 0.05263158, 0.03703704]), 'test_f1': array([0.0952381 , 0.05555556, 0.04545455]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05230808, 2.18873811, 2.16390204]), 'fit_time': array([2.75487995, 2.96206999, 2.93147898]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.3343401 , 0.25484204, 0.22968197]), 'fit_time': array([0.48909903, 0.42850208, 0.33928895]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.27689886, 0.28041697, 0.32034183]), 'fit_time': array([1.21869612, 1.27899885, 1.32855415]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06109595, 0.0666399 , 0.07328796]), 'fit_time': array([0.48175001, 0.60803413, 0.554528  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.0675149 , 0.06677103, 0.06852102]), 'fit_time': array([0.10849905, 0.10305214, 0.10830879]), 'test_precision': array([0.05555556, 0.05263158, 0.03333333]), 'test_f1': array([0.07407407, 0.05555556, 0.04255319]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04992604, 2.18614697, 2.16415501]), 'fit_time': array([2.72305489, 2.96904802, 2.93848896]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.32694387, 0.2969861 , 0.29538608]), 'fit_time': array([0.49590993, 0.54752803, 0.51427794]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.31179214, 0.31647897, 0.28512001]), 'fit_time': array([1.803859  , 1.64991403, 2.15754795]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05928802, 0.0650959 , 0.07053208]), 'fit_time': array([0.50770783, 0.5891521 , 0.66521978]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06924891, 0.06545401, 0.06782508]), 'fit_time': array([0.10855198, 0.10134101, 0.109092  ]), 'test_precision': array([0.05714286, 0.05      , 0.03125   ]), 'test_f1': array([0.0754717 , 0.05405405, 0.04081633]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04927707, 2.18788409, 2.16503   ]), 'fit_time': array([2.74243784, 2.96314692, 2.9336462 ]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.28876591, 0.22728395, 0.31735706]), 'fit_time': array([0.51577497, 0.39903998, 0.54010201]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.30722594, 0.298774  , 0.26752186]), 'fit_time': array([1.68951702, 1.81239605, 1.82387495]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06018519, 0.06482601, 0.07115006]), 'fit_time': array([0.5185349 , 0.6343708 , 0.60461879]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06680393, 0.06400394, 0.06812596]), 'fit_time': array([0.10709   , 0.10173011, 0.10992408]), 'test_precision': array([0.05555556, 0.04545455, 0.03030303]), 'test_f1': array([0.07407407, 0.05128205, 0.04      ]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05066705, 2.18998408, 2.16999602]), 'fit_time': array([2.73996186, 2.96291709, 2.9320631 ]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.31781816, 0.28780389, 0.2881608 ]), 'fit_time': array([0.78924489, 0.59484601, 0.48141098]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.28771305, 0.24355602, 0.2748549 ]), 'fit_time': array([2.2705729 , 1.71464086, 2.38591814]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.0594399 , 0.06419802, 0.06931305]), 'fit_time': array([0.57844996, 0.63813496, 0.66056299]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06500411, 0.06196499, 0.06681705]), 'fit_time': array([0.10879207, 0.1003232 , 0.10935211]), 'test_precision': array([0.05405405, 0.04761905, 0.02631579]), 'test_f1': array([0.07272727, 0.05263158, 0.03636364]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05141807, 2.18808484, 2.16426396]), 'fit_time': array([2.74836516, 2.96258402, 2.93168902]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.33599591, 0.29295588, 0.28372693]), 'fit_time': array([0.79867506, 0.75262809, 0.61587   ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.30103087, 0.28147984, 0.25535083]), 'fit_time': array([2.51074815, 2.31177807, 2.81049204]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06185102, 0.06431699, 0.06810308]), 'fit_time': array([0.55654001, 0.64113712, 0.69815087]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.0645709 , 0.06543612, 0.06518793]), 'fit_time': array([0.10920715, 0.09938192, 0.1102612 ]), 'test_precision': array([0.05555556, 0.04761905, 0.02631579]), 'test_f1': array([0.07407407, 0.05263158, 0.03636364]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.32808208, 4.33786702, 3.95242691]), 'fit_time': array([2.73508096, 5.39091086, 5.08684897]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.35435605, 0.27392507, 0.2880249 ]), 'fit_time': array([1.27544999, 0.97572899, 0.66511106]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.29911995, 0.26483703, 0.24368095]), 'fit_time': array([2.67049193, 2.83551693, 2.94481993]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05837011, 0.06409907, 0.06658816]), 'fit_time': array([0.60232186, 0.66508198, 0.75522685]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06347299, 0.06089401, 0.063164  ]), 'fit_time': array([0.10598898, 0.09781981, 0.10658503]), 'test_precision': array([0.05405405, 0.04761905, 0.02631579]), 'test_f1': array([0.07272727, 0.05263158, 0.03636364]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.049716  , 2.18586707, 4.49172997]), 'fit_time': array([2.72263503, 2.95787501, 3.733042  ]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.63466001, 0.76379108, 0.47520304]), 'fit_time': array([1.98428893, 1.86003804, 1.74896502]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.48020983, 0.37006211, 0.25019503]), 'fit_time': array([5.16725016, 5.51499486, 3.73307395]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.058038  , 0.06271696, 0.06718397]), 'fit_time': array([0.66398096, 0.73489094, 0.69807291]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06289887, 0.06120396, 0.06366611]), 'fit_time': array([0.107939  , 0.09761095, 0.10731292]), 'test_precision': array([0.05555556, 0.05263158, 0.02631579]), 'test_f1': array([0.07407407, 0.05555556, 0.03636364]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04099989, 2.17421103, 2.14789295]), 'fit_time': array([2.72098517, 2.94463801, 2.91414118]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.29200196, 0.31588197, 0.27223301]), 'fit_time': array([0.91742802, 0.87388897, 0.86199713]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.28917217, 0.27125001, 0.25738502]), 'fit_time': array([2.77165294, 2.46702409, 3.25092793]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05831695, 0.06521702, 0.06631994]), 'fit_time': array([0.68382406, 0.72810888, 0.832654  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.0618751 , 0.06025004, 0.06681108]), 'fit_time': array([0.10722899, 0.09633493, 0.10758686]), 'test_precision': array([0.05405405, 0.04761905, 0.02702703]), 'test_f1': array([0.07272727, 0.05263158, 0.03703704]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04201293, 2.17451596, 2.14795494]), 'fit_time': array([2.72778201, 2.94827199, 2.91733003]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.28044701, 0.27864289, 0.29085517]), 'fit_time': array([0.97075701, 1.01644993, 1.1326468 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.26464605, 0.26391697, 0.23350978]), 'fit_time': array([3.84681702, 3.47318697, 3.3371551 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05830908, 0.06304502, 0.06661701]), 'fit_time': array([0.75167203, 0.78607106, 0.89573789]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06146097, 0.05948591, 0.06537795]), 'fit_time': array([0.1071341 , 0.09618497, 0.10710502]), 'test_precision': array([0.05555556, 0.04545455, 0.02702703]), 'test_f1': array([0.07407407, 0.05128205, 0.03703704]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04108596, 2.17439485, 2.14994097]), 'fit_time': array([2.74072504, 2.94756317, 2.91676211]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.28065205, 0.29196215, 0.25881791]), 'fit_time': array([1.24978995, 1.11888194, 1.05585003]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.23894405, 0.25947094, 0.244241  ]), 'fit_time': array([3.28862596, 3.60626101, 3.83848691]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05715799, 0.06246185, 0.06645894]), 'fit_time': array([0.7486341 , 0.82457614, 0.94379807]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06241512, 0.05846   , 0.06262803]), 'fit_time': array([0.10648584, 0.09631705, 0.10608792]), 'test_precision': array([0.05405405, 0.04545455, 0.02702703]), 'test_f1': array([0.07272727, 0.05128205, 0.03703704]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04211187, 2.18141699, 2.14846015]), 'fit_time': array([2.71965599, 2.94868398, 2.9488349 ]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.29359698, 0.24483395, 0.257972  ]), 'fit_time': array([1.93873191, 1.10483003, 1.69230795]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.2266202 , 0.27445006, 0.2056241 ]), 'fit_time': array([4.76199794, 4.74809384, 4.38185883]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05644107, 0.0628469 , 0.06805205]), 'fit_time': array([0.7829659 , 0.88780308, 0.93476796]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06180787, 0.05773401, 0.06254601]), 'fit_time': array([0.10754108, 0.09530282, 0.10744691]), 'test_precision': array([0.05263158, 0.04761905, 0.02631579]), 'test_f1': array([0.07142857, 0.05263158, 0.03636364]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04578781, 2.17379689, 2.14826894]), 'fit_time': array([2.7203052 , 2.94625306, 2.91704297]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.27993512, 0.21927595, 0.20405793]), 'fit_time': array([1.82645988, 1.65789509, 2.30962992]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.2232399 , 0.24991488, 0.20879292]), 'fit_time': array([4.65334702, 4.7673502 , 4.78155422]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05627418, 0.06210494, 0.06585598]), 'fit_time': array([0.81424284, 0.94695807, 1.00524282]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06114507, 0.05707407, 0.0618701 ]), 'fit_time': array([0.10785389, 0.09486008, 0.105407  ]), 'test_precision': array([0.05263158, 0.04761905, 0.02777778]), 'test_f1': array([0.07142857, 0.05263158, 0.03773585]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04374409, 2.1757431 , 2.14836001]), 'fit_time': array([2.727319  , 2.96216893, 2.91795397]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.23904705, 0.20163918, 0.14491582]), 'fit_time': array([1.74080396, 2.70501399, 3.51084304]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21652198, 0.22901082, 0.21223593]), 'fit_time': array([5.53435516, 5.73095918, 5.00167894]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05615902, 0.06110811, 0.06512499]), 'fit_time': array([0.82728696, 0.9631629 , 1.07683706]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05988789, 0.05714202, 0.06070685]), 'fit_time': array([0.10728002, 0.09492707, 0.10518312]), 'test_precision': array([0.05263158, 0.04761905, 0.02777778]), 'test_f1': array([0.07142857, 0.05263158, 0.03773585]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04089808, 2.17546606, 2.1493659 ]), 'fit_time': array([2.728791  , 2.95307899, 2.92903113]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.33023691, 0.3133471 , 0.34861588]), 'fit_time': array([5.19264889, 4.85684705, 8.54737711]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20496798, 0.20701098, 0.32554293]), 'fit_time': array([ 8.72790098,  7.11102509, 12.13739705]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.09555197, 0.11353302, 0.10738993]), 'fit_time': array([1.42089295, 1.56578994, 1.93564391]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.14744592, 0.09423518, 0.09798312]), 'fit_time': array([0.20017409, 0.28533483, 0.15763092]), 'test_precision': array([0.05714286, 0.04761905, 0.02941176]), 'test_f1': array([0.0754717 , 0.05263158, 0.03921569]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.63038301, 2.18440485, 2.15200806]), 'fit_time': array([4.25436997, 3.01260209, 2.95539594]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.168257  , 0.11662984, 0.09735012]), 'fit_time': array([4.60604501, 5.30113196, 6.51090193]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.17448497, 0.17679   , 0.16440701]), 'fit_time': array([ 9.7392621 , 10.23290491, 10.26571202]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.05633402, 0.06012106, 0.064749  ]), 'fit_time': array([0.9619379 , 1.17340398, 1.23142314]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05917907, 0.05679011, 0.05811   ]), 'fit_time': array([0.10637093, 0.09497285, 0.10444999]), 'test_precision': array([0.05555556, 0.04761905, 0.02857143]), 'test_f1': array([0.07407407, 0.05263158, 0.03846154]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.04334807, 2.17908406, 2.14994097]), 'fit_time': array([2.74298906, 2.9555099 , 2.96118402]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10454202, 0.10118008, 0.12265706]), 'fit_time': array([6.03129482, 4.85303903, 6.32963896]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.1721859 , 0.15694714, 0.13895392]), 'fit_time': array([10.30963802, 10.48540306, 12.406528  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06008506, 0.06039119, 0.06398487]), 'fit_time': array([0.97016096, 1.1334219 , 1.22567105]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.05915713, 0.05705595, 0.05934095]), 'fit_time': array([0.10678887, 0.09503102, 0.10423899]), 'test_precision': array([0.05882353, 0.04761905, 0.02702703]), 'test_f1': array([0.07692308, 0.05263158, 0.03703704]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05305696, 2.1829021 , 2.15524983]), 'fit_time': array([2.75332093, 2.96074009, 2.92822909]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09708619, 0.06631184, 0.10081697]), 'fit_time': array([6.47167778, 6.87865019, 6.61728811]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.1617949 , 0.14035606, 0.13823485]), 'fit_time': array([11.52298307, 12.041749  , 12.82255411]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06024289, 0.06185889, 0.06407619]), 'fit_time': array([1.00436711, 1.15550303, 1.34305477]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([0.06017804, 0.06009007, 0.05897498]), 'fit_time': array([0.10935807, 0.09552813, 0.10428309]), 'test_precision': array([0.06060606, 0.04761905, 0.02564103]), 'test_f1': array([0.07843137, 0.05263158, 0.03571429]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.05640483, 2.18360901, 2.1647501 ]), 'fit_time': array([2.75885606, 2.96827006, 2.93554592]), 'test_precision': array([0.18181818, 0.33333333, 0.1       ]), 'test_f1': array([0.13793103, 0.1       , 0.07407407]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.06407905, 0.06058383, 0.06031108]), 'fit_time': array([0.1124351 , 0.10620403, 0.10945702]), 'test_precision': array([0.06896552, 0.06666667, 0.03846154]), 'test_f1': array([0.08510638, 0.0625    , 0.04651163]), 'test_recall': array([0.11111111, 0.05882353, 0.05882353])})
('CV for PCA', 8)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.13686013, 0.12526417, 0.1219008 ]), 'fit_time': array([0.11759996, 0.10710692, 0.10513401]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.17611313, 0.12872005, 0.1356039 ]), 'fit_time': array([0.18177986, 0.24246693, 0.15378308]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.16552401, 0.12748408, 0.18161106]), 'fit_time': array([0.15191722, 0.24172401, 0.23196411]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([2.41912794, 2.75226903, 2.43201518]), 'fit_time': array([2.60757613, 2.7133801 , 2.89657402]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.44021988, 5.08096004, 6.5627439 ]), 'fit_time': array([7.8327291 , 6.79682684, 4.40813494]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.33307791, 0.28830504, 0.25792909]), 'fit_time': array([0.33662701, 0.41618705, 0.30370498]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.13918686, 0.11873198, 0.24934793]), 'fit_time': array([0.39791608, 0.30240512, 0.40161109]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.07483602, 0.1370461 , 0.1266861 ]), 'fit_time': array([0.13628006, 0.10607791, 0.20181894]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([2.36448908, 4.33360791, 5.6021502 ]), 'fit_time': array([2.518327  , 2.80363107, 5.07043982]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([11.81026793,  5.96622705,  3.64321113]), 'fit_time': array([12.99400997, 11.44885612,  6.47859287]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.13956404, 0.17440319, 0.11936879]), 'fit_time': array([0.24580503, 0.25983381, 0.20575619]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0592401 , 0.06690717, 0.06277704]), 'fit_time': array([0.17417693, 0.17622185, 0.19229007]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.0707109 , 0.07362795, 0.07250714]), 'fit_time': array([0.10451293, 0.11118317, 0.10595083]), 'test_precision': array([0.25      , 0.16666667, 0.13333333]), 'test_f1': array([0.15384615, 0.08695652, 0.125     ]), 'test_recall': array([0.11111111, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30334306, 1.51322293, 1.45453095]), 'fit_time': array([1.48158097, 1.82105899, 1.71509004]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38952708, 3.38814092, 3.38594913]), 'fit_time': array([4.33019495, 4.31699109, 4.49639797]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14310503, 0.15914893, 0.12030196]), 'fit_time': array([0.32483196, 0.30086303, 0.31452513]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05815506, 0.06050086, 0.06008983]), 'fit_time': array([0.18067288, 0.18978   , 0.20293808]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.07241297, 0.07229686, 0.06715012]), 'fit_time': array([0.10840893, 0.11197805, 0.10698199]), 'test_precision': array([0.15789474, 0.11111111, 0.11764706]), 'test_f1': array([0.16216216, 0.07692308, 0.11764706]), 'test_recall': array([0.16666667, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30021405, 1.51563787, 1.45482397]), 'fit_time': array([1.48027611, 1.81880713, 1.71707392]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.384727  , 3.38257909, 3.38848615]), 'fit_time': array([4.32177401, 4.32778096, 4.49726987]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.15571284, 0.16110611, 0.12455916]), 'fit_time': array([0.39623809, 0.39640498, 0.33287501]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05781984, 0.06073499, 0.06322002]), 'fit_time': array([0.19276404, 0.19378519, 0.2066412 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06897807, 0.06979108, 0.06550694]), 'fit_time': array([0.10775495, 0.11031294, 0.1060791 ]), 'test_precision': array([0.15789474, 0.07692308, 0.11111111]), 'test_f1': array([0.16216216, 0.06666667, 0.11428571]), 'test_recall': array([0.16666667, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.29904819, 1.51614189, 1.45544004]), 'fit_time': array([1.46918583, 1.81593895, 1.73235893]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38235211, 3.39188886, 3.38764191]), 'fit_time': array([4.29495788, 4.31634998, 4.528795  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14666295, 0.16110301, 0.12479305]), 'fit_time': array([0.41863298, 0.42589903, 0.43621898]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0577929 , 0.05981112, 0.06345797]), 'fit_time': array([0.19663   , 0.20372391, 0.21220303]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06718588, 0.06715584, 0.06379509]), 'fit_time': array([0.10590005, 0.10844612, 0.10425806]), 'test_precision': array([0.15789474, 0.07692308, 0.13636364]), 'test_f1': array([0.16216216, 0.06666667, 0.15384615]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30410814, 1.51507092, 1.45528984]), 'fit_time': array([1.46968293, 1.81577516, 1.71801114]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38372397, 3.40136194, 3.39283609]), 'fit_time': array([4.29184699, 4.33401489, 4.49824691]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.15310907, 0.15290523, 0.11829877]), 'fit_time': array([0.489012  , 0.53283787, 0.37793922]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05762696, 0.06086302, 0.06077886]), 'fit_time': array([0.20409703, 0.19946098, 0.20189023]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06541109, 0.06739378, 0.06432104]), 'fit_time': array([0.10538292, 0.1076591 , 0.10476995]), 'test_precision': array([0.13043478, 0.07692308, 0.11538462]), 'test_f1': array([0.14634146, 0.06666667, 0.13953488]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30033803, 1.51570487, 1.45449185]), 'fit_time': array([1.48793411, 1.81741095, 1.71645212]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38336182, 3.38686609, 3.38693905]), 'fit_time': array([4.29762006, 4.31568885, 4.5109179 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.15499306, 0.15695596, 0.12562513]), 'fit_time': array([0.51490712, 0.56716394, 0.53199983]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05788684, 0.06041098, 0.06043506]), 'fit_time': array([0.20779419, 0.22863984, 0.23913383]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06634283, 0.06651807, 0.06304193]), 'fit_time': array([0.10427618, 0.10880899, 0.10320807]), 'test_precision': array([0.13043478, 0.07692308, 0.11111111]), 'test_f1': array([0.14634146, 0.06666667, 0.13636364]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30166101, 1.51996708, 1.45449591]), 'fit_time': array([1.46755195, 1.8149128 , 1.745996  ]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38227892, 3.385113  , 3.385144  ]), 'fit_time': array([4.29672599, 4.31487012, 4.4951489 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14758515, 0.16732597, 0.128901  ]), 'fit_time': array([0.59250879, 0.62393808, 0.54592896]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05742121, 0.06020498, 0.060215  ]), 'fit_time': array([0.215168  , 0.23896408, 0.22757888]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06343794, 0.06550694, 0.06250906]), 'fit_time': array([0.10338116, 0.10766697, 0.1022501 ]), 'test_precision': array([0.13636364, 0.0625    , 0.11111111]), 'test_f1': array([0.15      , 0.06060606, 0.13636364]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30157113, 1.51977992, 1.45450401]), 'fit_time': array([1.47818589, 1.81725311, 1.717134  ]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.387362  , 3.39588118, 3.39488196]), 'fit_time': array([4.29169202, 4.34703398, 4.49707603]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.1312499 , 0.13359618, 0.12788916]), 'fit_time': array([0.59720993, 0.57115483, 0.55344081]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05766416, 0.06084013, 0.06034708]), 'fit_time': array([0.22031379, 0.23953485, 0.23561001]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06068802, 0.06535101, 0.06147194]), 'fit_time': array([0.10358405, 0.10794401, 0.1018889 ]), 'test_precision': array([0.125     , 0.05882353, 0.11111111]), 'test_f1': array([0.14285714, 0.05882353, 0.13636364]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.29983211, 1.515553  , 1.45530891]), 'fit_time': array([1.46663499, 1.81808901, 1.72552609]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.3836689 , 3.39254308, 3.38917184]), 'fit_time': array([4.29924011, 4.31725287, 4.52797198]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.11769485, 0.14938807, 0.12487698]), 'fit_time': array([0.50759912, 0.75788188, 0.51229215]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06036282, 0.06029201, 0.05988121]), 'fit_time': array([0.22193217, 0.25158906, 0.24275494]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06104708, 0.06807089, 0.06135011]), 'fit_time': array([0.10408092, 0.10753608, 0.10080791]), 'test_precision': array([0.125     , 0.05882353, 0.10714286]), 'test_f1': array([0.14285714, 0.05882353, 0.13333333]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30076194, 1.51543307, 1.45452309]), 'fit_time': array([1.46595812, 1.81425595, 1.72006083]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38365698, 3.39096999, 3.3890748 ]), 'fit_time': array([4.28880692, 4.33010888, 4.50150418]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.13485909, 0.14716506, 0.13330698]), 'fit_time': array([0.61424994, 0.68741512, 0.64712191]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05767679, 0.06125712, 0.06026196]), 'fit_time': array([0.23095417, 0.281775  , 0.259835  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06094813, 0.06808305, 0.06139493]), 'fit_time': array([0.10401797, 0.107687  , 0.10135221]), 'test_precision': array([0.125     , 0.05882353, 0.10344828]), 'test_f1': array([0.14285714, 0.05882353, 0.13043478]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.29975009, 1.51637292, 1.456774  ]), 'fit_time': array([1.48657298, 1.82117009, 1.71806002]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38214803, 3.39217806, 3.38221312]), 'fit_time': array([4.29853296, 4.31498098, 4.5110991 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.12400699, 0.12330699, 0.11287904]), 'fit_time': array([0.64756393, 0.92622614, 0.65804601]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05773902, 0.06304193, 0.05965519]), 'fit_time': array([0.25519085, 0.26762605, 0.2803638 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06080198, 0.0655899 , 0.05884695]), 'fit_time': array([0.10411906, 0.10774612, 0.10106611]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30071688, 1.51416397, 1.45578694]), 'fit_time': array([1.46703005, 1.85044193, 1.71991801]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38086104, 3.38855195, 3.382792  ]), 'fit_time': array([4.29875398, 4.3154099 , 4.49896002]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.13052392, 0.126652  , 0.12589979]), 'fit_time': array([0.78994203, 0.87847209, 0.83971214]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05823183, 0.06545997, 0.05938792]), 'fit_time': array([0.25342512, 0.30808115, 0.284302  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06130219, 0.06570721, 0.06159878]), 'fit_time': array([0.10403299, 0.10765195, 0.10094619]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30162907, 1.51671195, 1.45530486]), 'fit_time': array([1.47813797, 1.82069707, 1.72017217]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.3835721 , 3.39259386, 3.38750601]), 'fit_time': array([4.32575107, 4.32712317, 4.50283504]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10832214, 0.11087298, 0.11763597]), 'fit_time': array([0.87211084, 0.76111794, 0.91375685]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05774307, 0.06185007, 0.05943489]), 'fit_time': array([0.28327107, 0.32112598, 0.28366709]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06108999, 0.0657239 , 0.06023598]), 'fit_time': array([0.10408998, 0.10765815, 0.10099006]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30105901, 1.51944017, 1.45549107]), 'fit_time': array([1.46718597, 1.81887388, 1.73143196]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.389292  , 3.38748002, 3.38489985]), 'fit_time': array([4.29520011, 4.34668994, 4.51122618]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10982394, 0.11336899, 0.122684  ]), 'fit_time': array([1.00130606, 1.12539887, 1.10980201]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05716586, 0.06169081, 0.05937481]), 'fit_time': array([0.31447697, 0.33346605, 0.3134501 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06077886, 0.06548095, 0.05912709]), 'fit_time': array([0.10407305, 0.10763502, 0.10103297]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.29980993, 1.51699781, 1.45471096]), 'fit_time': array([1.46652699, 1.81396604, 1.719033  ]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.3914299 , 6.16970515, 9.74560213]), 'fit_time': array([ 4.29784012,  4.316715  , 14.29933977]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.32056522, 0.43972492, 0.42126513]), 'fit_time': array([2.71901894, 3.38109708, 3.97739482]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.09579492, 0.14884806, 0.18642592]), 'fit_time': array([0.60652208, 0.59881592, 1.00095201]), 'test_precision': array([0. , 0. , 0.5]), 'test_f1': array([0.        , 0.        , 0.10526316]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.12262988, 0.15351009, 0.20318604]), 'fit_time': array([0.31347108, 0.21170306, 0.20881295]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.05579591, 3.90791106, 3.89594197]), 'fit_time': array([4.00841093, 5.18006301, 3.98300385]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.80363798, 3.39625311, 3.38959789]), 'fit_time': array([10.31804705,  4.381109  ,  4.5477612 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09078598, 0.09795809, 0.09223986]), 'fit_time': array([1.10105205, 1.22014594, 1.32065916]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05839014, 0.06247807, 0.05928707]), 'fit_time': array([0.34272003, 0.40969992, 0.32932997]), 'test_precision': array([0. , 0. , 0.5]), 'test_f1': array([0.        , 0.        , 0.10526316]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06082916, 0.06539297, 0.05876088]), 'fit_time': array([0.10418105, 0.10782313, 0.10130501]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30398107, 1.52093101, 1.45492506]), 'fit_time': array([1.49654412, 1.82906103, 1.739007  ]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38644314, 3.395401  , 3.38778782]), 'fit_time': array([4.30274296, 4.35252404, 4.49999309]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09405208, 0.08828306, 0.091573  ]), 'fit_time': array([1.19897604, 1.152807  , 1.2867651 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0600059 , 0.06171513, 0.05781507]), 'fit_time': array([0.35686898, 0.42129183, 0.39409399]), 'test_precision': array([0. , 0. , 0.5]), 'test_f1': array([0.        , 0.        , 0.10526316]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06074405, 0.06545496, 0.05883884]), 'fit_time': array([0.10416794, 0.10775805, 0.1009891 ]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30006003, 1.51552296, 1.45601392]), 'fit_time': array([1.48512983, 1.8263402 , 1.72737408]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38748407, 3.38959098, 3.38558912]), 'fit_time': array([4.29448199, 4.35186911, 4.49973297]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.08638501, 0.09201908, 0.08442593]), 'fit_time': array([1.112674  , 1.30880499, 1.58742285]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.05956912, 0.06290817, 0.05953407]), 'fit_time': array([0.37328196, 0.43735003, 0.40391803]), 'test_precision': array([0.        , 0.        , 0.33333333]), 'test_f1': array([0. , 0. , 0.1]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06376719, 0.06557703, 0.05853319]), 'fit_time': array([0.10437584, 0.10786915, 0.10113883]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.30222011, 1.5216279 , 1.4550271 ]), 'fit_time': array([1.47334099, 1.82698989, 1.73912787]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.38222098, 3.38684988, 3.38311601]), 'fit_time': array([4.29495811, 4.34282494, 4.50958991]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.08469105, 0.07952499, 0.08229184]), 'fit_time': array([1.30343914, 1.19608688, 1.54715919]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0603199 , 0.06221795, 0.05769205]), 'fit_time': array([0.40407705, 0.47531605, 0.45700407]), 'test_precision': array([0.        , 0.        , 0.33333333]), 'test_f1': array([0. , 0. , 0.1]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.06087399, 0.06547213, 0.05848408]), 'fit_time': array([0.10429287, 0.10785294, 0.101161  ]), 'test_precision': array([0.125     , 0.05882353, 0.1       ]), 'test_f1': array([0.14285714, 0.05882353, 0.12765957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([1.299896  , 1.5203619 , 1.45501709]), 'fit_time': array([1.47439599, 1.82183409, 1.72549796]), 'test_precision': array([0.33333333, 0.        , 0.5       ]), 'test_f1': array([0.0952381 , 0.        , 0.10526316]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.3821969 , 3.39173293, 3.39068508]), 'fit_time': array([4.30639005, 4.31825113, 4.5370748 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([1.94829488, 2.08295703, 2.0278399 ]), 'fit_time': array([2.88995814, 3.28181696, 3.19451404]), 'test_precision': array([0.5, 0. , 1. ]), 'test_f1': array([0.1       , 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('CV for PCA', 16)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09439588, 0.08466196, 0.08664489]), 'fit_time': array([0.0970211 , 0.07826304, 0.07992101]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06908202, 0.06785417, 0.06186199]), 'fit_time': array([0.08845401, 0.08684683, 0.07940722]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10430694, 0.10824299, 0.10851812]), 'fit_time': array([0.09872913, 0.09969211, 0.10194302]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.74523902, 3.82413197, 3.77454901]), 'fit_time': array([4.96214795, 5.74444294, 5.39132404]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33297801, 4.34012604, 4.33275795]), 'fit_time': array([4.79132295, 4.86853385, 5.02942801]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09532404, 0.07949305, 0.07948399]), 'fit_time': array([0.14287996, 0.12098598, 0.13139606]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0709331 , 0.06847286, 0.06231403]), 'fit_time': array([0.09900999, 0.09695101, 0.09176803]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.11672115, 0.11078596, 0.11174202]), 'fit_time': array([0.12692189, 0.11269999, 0.12204599]), 'test_precision': array([0.5       , 0.66666667, 0.625     ]), 'test_f1': array([0.18181818, 0.2       , 0.4       ]), 'test_recall': array([0.11111111, 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.78169894, 3.84647703, 3.79553986]), 'fit_time': array([5.40762901, 5.96484685, 5.95659614]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33205605, 4.33551097, 4.33775187]), 'fit_time': array([4.86788893, 4.76608896, 5.17398405]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06970596, 0.06812191, 0.06572604]), 'fit_time': array([0.16225791, 0.14119005, 0.13567495]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06973791, 0.06584096, 0.06193304]), 'fit_time': array([0.10762119, 0.10624814, 0.09617591]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10754204, 0.10941577, 0.10164404]), 'fit_time': array([0.12267089, 0.11528516, 0.11335802]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77668095, 3.84708405, 3.79594588]), 'fit_time': array([5.43994713, 5.96564412, 5.96910501]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.337852  , 4.33435512, 4.33360696]), 'fit_time': array([4.870049  , 4.79193807, 5.17397809]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06323409, 0.06723809, 0.06356192]), 'fit_time': array([0.17644691, 0.13807893, 0.14034796]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06976199, 0.06828403, 0.06373382]), 'fit_time': array([0.11597919, 0.11511993, 0.10798097]), 'test_precision': array([0. , 0.2, 0.4]), 'test_f1': array([0.        , 0.09090909, 0.18181818]), 'test_recall': array([0.        , 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10725689, 0.10936499, 0.10179019]), 'fit_time': array([0.12235999, 0.11539602, 0.11351681]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.78072405, 3.84465909, 3.80025816]), 'fit_time': array([5.40868711, 5.9809649 , 5.955724  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33995104, 4.34247088, 4.34479308]), 'fit_time': array([4.90152907, 4.7527051 , 5.17347884]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.065238  , 0.06279898, 0.06316996]), 'fit_time': array([0.17417002, 0.14742112, 0.15068603]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07026792, 0.06801319, 0.06776786]), 'fit_time': array([0.11933398, 0.1228528 , 0.11596298]), 'test_precision': array([0.66666667, 0.14285714, 0.33333333]), 'test_f1': array([0.19047619, 0.08333333, 0.17391304]), 'test_recall': array([0.11111111, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.107476  , 0.11005998, 0.10163593]), 'fit_time': array([0.12243605, 0.11535692, 0.11328316]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.78792119, 3.83673215, 3.79496408]), 'fit_time': array([5.42058682, 5.9992559 , 5.95711994]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33829093, 4.34476495, 4.338763  ]), 'fit_time': array([4.86989999, 4.75287819, 5.18689299]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06211209, 0.06049109, 0.06318903]), 'fit_time': array([0.16276908, 0.13685203, 0.13821316]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07105207, 0.06854796, 0.06690598]), 'fit_time': array([0.130023  , 0.131001  , 0.12136102]), 'test_precision': array([0.71428571, 0.22222222, 0.28571429]), 'test_f1': array([0.4       , 0.15384615, 0.16666667]), 'test_recall': array([0.27777778, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.1075449 , 0.11002207, 0.10168004]), 'fit_time': array([0.12922621, 0.11598206, 0.11328506]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.78168488, 3.84737182, 4.77685905]), 'fit_time': array([5.43858695, 5.96718502, 5.95711899]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([ 9.93291092, 10.21952796, 12.01449108]), 'fit_time': array([10.10973001, 13.29312015, 12.6333158 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.09021616, 0.17756987, 0.11639404]), 'fit_time': array([0.24848485, 0.24740601, 0.42788696]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.16941595, 0.1646471 , 0.14353991]), 'fit_time': array([0.23527908, 0.27996492, 0.40734816]), 'test_precision': array([0.6       , 0.23076923, 0.45454545]), 'test_f1': array([0.42857143, 0.2       , 0.35714286]), 'test_recall': array([0.33333333, 0.17647059, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.16912603, 0.17244601, 0.15738893]), 'fit_time': array([0.17558098, 0.1680429 , 0.16733003]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77676606, 3.84043121, 3.78507519]), 'fit_time': array([7.3297708 , 6.06361699, 5.98675895]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.34404016, 4.34736896, 4.3377769 ]), 'fit_time': array([4.91394091, 4.76640987, 5.61060405]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06236601, 0.0606699 , 0.06177497]), 'fit_time': array([0.16303301, 0.1385541 , 0.14346313]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06969619, 0.07045794, 0.068928  ]), 'fit_time': array([0.13516283, 0.13454103, 0.13348699]), 'test_precision': array([0.6       , 0.26666667, 0.45454545]), 'test_f1': array([0.42857143, 0.25      , 0.35714286]), 'test_recall': array([0.33333333, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10989189, 0.10950398, 0.10174608]), 'fit_time': array([0.12240911, 0.11523318, 0.1134088 ]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77342987, 3.83383083, 3.800699  ]), 'fit_time': array([5.40402508, 5.97758412, 5.95195484]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.32811117, 4.34156203, 4.341079  ]), 'fit_time': array([4.90032482, 4.75227594, 5.17179298]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06051302, 0.06093907, 0.06227803]), 'fit_time': array([0.16363907, 0.15154195, 0.15731001]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0702858 , 0.06854415, 0.06662107]), 'fit_time': array([0.1354382 , 0.13618898, 0.13980889]), 'test_precision': array([0.63636364, 0.28571429, 0.41666667]), 'test_f1': array([0.48275862, 0.25806452, 0.34482759]), 'test_recall': array([0.38888889, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10784602, 0.10956597, 0.10162616]), 'fit_time': array([0.12224483, 0.11550093, 0.11346698]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77362204, 3.84779119, 3.79602289]), 'fit_time': array([5.41566396, 5.99971986, 5.951159  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.32749891, 4.34152293, 4.34149504]), 'fit_time': array([4.86299801, 4.76226091, 5.18113899]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.060431  , 0.06125307, 0.06178403]), 'fit_time': array([0.16514301, 0.13935399, 0.15485597]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07115984, 0.06998801, 0.06567001]), 'fit_time': array([0.14147115, 0.13976097, 0.14156699]), 'test_precision': array([0.63636364, 0.28571429, 0.41666667]), 'test_f1': array([0.48275862, 0.25806452, 0.34482759]), 'test_recall': array([0.38888889, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.1071558 , 0.1099968 , 0.10166693]), 'fit_time': array([0.12225604, 0.1156671 , 0.1135931 ]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77752686, 3.84610391, 3.79564619]), 'fit_time': array([5.43343306, 5.963552  , 5.95292091]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.32916212, 4.34471583, 4.33936119]), 'fit_time': array([4.87718391, 4.75138807, 5.20555782]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06014299, 0.06100607, 0.06097388]), 'fit_time': array([0.16262102, 0.14802098, 0.15420198]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07423997, 0.06938481, 0.066113  ]), 'fit_time': array([0.14023995, 0.1396482 , 0.14173484]), 'test_precision': array([0.6       , 0.23076923, 0.38888889]), 'test_f1': array([0.42857143, 0.2       , 0.4       ]), 'test_recall': array([0.33333333, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10769296, 0.10939813, 0.10165691]), 'fit_time': array([0.12220001, 0.11522007, 0.11330891]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77402997, 3.84622407, 3.79202795]), 'fit_time': array([5.40209413, 5.9628489 , 5.96301198]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.32714891, 4.34222507, 4.34097505]), 'fit_time': array([4.90195799, 4.75169492, 5.17149496]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06049204, 0.0600791 , 0.06164408]), 'fit_time': array([0.1741538 , 0.1530149 , 0.15699983]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07263422, 0.068892  , 0.06754398]), 'fit_time': array([0.14487386, 0.14181018, 0.14390802]), 'test_precision': array([0.6       , 0.23076923, 0.33333333]), 'test_f1': array([0.42857143, 0.2       , 0.36842105]), 'test_recall': array([0.33333333, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10799217, 0.10956788, 0.10173297]), 'fit_time': array([0.12247086, 0.1153872 , 0.11340213]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77405906, 3.84824896, 3.79075885]), 'fit_time': array([5.41664791, 5.96199107, 5.98831701]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33269715, 4.34433889, 4.33937311]), 'fit_time': array([4.86426091, 4.75536704, 5.18430305]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06100678, 0.06153107, 0.06106615]), 'fit_time': array([0.18590903, 0.1425209 , 0.15146804]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07352805, 0.06929207, 0.06901884]), 'fit_time': array([0.1488049 , 0.14485693, 0.14736819]), 'test_precision': array([0.6 , 0.2 , 0.35]), 'test_f1': array([0.42857143, 0.1875    , 0.37837838]), 'test_recall': array([0.33333333, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10713601, 0.10968494, 0.10163093]), 'fit_time': array([0.12235904, 0.11516714, 0.11345387]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77291203, 3.84597397, 3.7942369 ]), 'fit_time': array([5.43790603, 5.96217704, 5.94973922]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33417797, 4.34143209, 4.336761  ]), 'fit_time': array([4.8689239 , 4.76565313, 5.2124548 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.06005001, 0.06099701, 0.06095815]), 'fit_time': array([0.18450999, 0.14879203, 0.16013885]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07242799, 0.070333  , 0.07183099]), 'fit_time': array([0.14563203, 0.14300704, 0.15597892]), 'test_precision': array([0.46153846, 0.25      , 0.33333333]), 'test_f1': array([0.38709677, 0.24242424, 0.36842105]), 'test_recall': array([0.33333333, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10748887, 0.10941601, 0.10159707]), 'fit_time': array([0.12253809, 0.11552405, 0.11359906]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.78257298, 3.84381509, 3.794451  ]), 'fit_time': array([5.40409398, 5.96293688, 5.96805596]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([7.78876185, 8.11479497, 8.2734971 ]), 'fit_time': array([5.63135505, 8.600389  , 7.97059989]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.20793819, 0.06099606, 0.06089687]), 'fit_time': array([0.37079787, 0.32821798, 0.15404606]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0713439 , 0.19594288, 0.15949607]), 'fit_time': array([0.14597011, 0.18700004, 0.28706598]), 'test_precision': array([0.42857143, 0.25      , 0.33333333]), 'test_f1': array([0.375     , 0.24242424, 0.36842105]), 'test_recall': array([0.33333333, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.2085681 , 0.18243909, 0.16785693]), 'fit_time': array([0.28829598, 0.18070889, 0.17441392]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.88002896, 6.81121302, 3.79182696]), 'fit_time': array([9.48066807, 8.71932983, 7.39191103]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([ 4.32863998,  8.57641387, 10.87583709]), 'fit_time': array([ 4.87733698,  5.43541217, 12.1730988 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.24704504, 0.19911695, 0.09708309]), 'fit_time': array([0.29407406, 0.64207196, 0.27245593]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.15958905, 0.11126089, 0.11206198]), 'fit_time': array([0.23820996, 0.22160721, 0.23374987]), 'test_precision': array([0.375     , 0.2       , 0.36363636]), 'test_f1': array([0.35294118, 0.1875    , 0.41025641]), 'test_recall': array([0.33333333, 0.17647059, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.17278695, 0.35331702, 0.29481983]), 'fit_time': array([0.18032408, 0.2313931 , 0.20957398]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([10.2813189 ,  8.94283795,  9.39409685]), 'fit_time': array([15.90722418, 17.51250196, 12.51697516]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([7.0113349 , 4.35128212, 4.34559512]), 'fit_time': array([13.92297816,  5.63660002,  5.20514393]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05972695, 0.06121707, 0.06115818]), 'fit_time': array([0.19560695, 0.1646719 , 0.16162801]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.07263899, 0.07135582, 0.07233906]), 'fit_time': array([0.15170097, 0.14852905, 0.15890193]), 'test_precision': array([0.35294118, 0.2       , 0.36363636]), 'test_f1': array([0.34285714, 0.1875    , 0.41025641]), 'test_recall': array([0.33333333, 0.17647059, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10980797, 0.1096921 , 0.10208988]), 'fit_time': array([0.12234092, 0.11542487, 0.11353302]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.78177214, 3.85139108, 3.79554605]), 'fit_time': array([5.45765591, 5.97274399, 5.95091891]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33076501, 4.34278512, 4.34313703]), 'fit_time': array([4.87598395, 4.77294087, 5.19051003]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05988812, 0.06048703, 0.06172109]), 'fit_time': array([0.19460201, 0.17297602, 0.17519879]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.0726521 , 0.07042408, 0.07306385]), 'fit_time': array([0.15626192, 0.1504879 , 0.16198516]), 'test_precision': array([0.33333333, 0.1875    , 0.33333333]), 'test_f1': array([0.33333333, 0.18181818, 0.3902439 ]), 'test_recall': array([0.33333333, 0.17647059, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10724211, 0.10993004, 0.10171008]), 'fit_time': array([0.12206984, 0.11581111, 0.11324501]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77579999, 3.84429383, 3.80005503]), 'fit_time': array([5.40264702, 5.98042917, 5.9530611 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33530283, 4.34423113, 4.338727  ]), 'fit_time': array([4.90073204, 4.75454092, 5.17224312]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05944705, 0.06099916, 0.06061196]), 'fit_time': array([0.19322109, 0.18411398, 0.17281508]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06895995, 0.06944513, 0.07165289]), 'fit_time': array([0.15634203, 0.14865184, 0.16267014]), 'test_precision': array([0.31578947, 0.17647059, 0.33333333]), 'test_f1': array([0.32432432, 0.17647059, 0.3902439 ]), 'test_recall': array([0.33333333, 0.17647059, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10714293, 0.10941291, 0.10198116]), 'fit_time': array([0.12209201, 0.1153121 , 0.11522388]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77466989, 3.84647703, 3.79593277]), 'fit_time': array([5.41617393, 5.97944188, 5.980232  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33008981, 4.34612799, 4.33839679]), 'fit_time': array([4.86491108, 4.75328302, 5.18915915]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05992484, 0.06046009, 0.06117892]), 'fit_time': array([0.20313501, 0.18312287, 0.18557405]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06760406, 0.07101107, 0.06902003]), 'fit_time': array([0.16606498, 0.14762878, 0.16178203]), 'test_precision': array([0.31578947, 0.16666667, 0.32      ]), 'test_f1': array([0.32432432, 0.17142857, 0.38095238]), 'test_recall': array([0.33333333, 0.17647059, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10725307, 0.1093719 , 0.10169888]), 'fit_time': array([0.12200713, 0.1154089 , 0.11323595]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.77568102, 3.84696484, 3.79823709]), 'fit_time': array([5.44060993, 5.96708298, 5.95380712]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.33000588, 4.34682703, 4.34078503]), 'fit_time': array([4.87834001, 4.75347209, 5.207546  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.05945897, 0.06037402, 0.06090498]), 'fit_time': array([0.20459604, 0.18891311, 0.18635082]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.06746101, 0.07258415, 0.06973004]), 'fit_time': array([0.16277504, 0.14876294, 0.16950083]), 'test_precision': array([0.28571429, 0.16666667, 0.30769231]), 'test_f1': array([0.30769231, 0.17142857, 0.37209302]), 'test_recall': array([0.33333333, 0.17647059, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.10711408, 0.10940814, 0.10176206]), 'fit_time': array([0.12203193, 0.11512685, 0.11326003]), 'test_precision': array([0.42857143, 0.5       , 0.6       ]), 'test_f1': array([0.24      , 0.19047619, 0.44444444]), 'test_recall': array([0.16666667, 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([3.7761991 , 3.84605503, 3.79303098]), 'fit_time': array([5.40365696, 5.96677804, 5.96796608]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([4.32999587, 4.34257293, 4.34380293]), 'fit_time': array([4.88488507, 4.77146912, 5.17582798]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.69347119, 2.91097403, 2.73343587]), 'fit_time': array([3.78184199, 4.40103793, 4.29988194]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('CV for PCA', 32)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.12403917, 0.11006021, 0.11593604]), 'fit_time': array([0.12672901, 0.09920192, 0.10574508]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11582589, 0.10783887, 0.10609007]), 'fit_time': array([0.1266551 , 0.11277413, 0.105654  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21466017, 0.23262906, 0.20806479]), 'fit_time': array([0.17798805, 0.18965793, 0.16846514]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.85516596, 5.86480093, 5.87866211]), 'fit_time': array([6.28157496, 6.897048  , 6.85079193]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.25953794, 6.26060987, 6.26197004]), 'fit_time': array([6.05989909, 6.24916792, 6.29099488]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.120363  , 0.10803223, 0.10327816]), 'fit_time': array([0.15907288, 0.14117384, 0.13892984]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11155391, 0.10647583, 0.10494781]), 'fit_time': array([0.13512897, 0.12147713, 0.12277913]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21367693, 0.2298758 , 0.21454811]), 'fit_time': array([0.18163395, 0.19585204, 0.1849618 ]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91624284, 5.91261196, 5.91185284]), 'fit_time': array([6.25048399, 6.62993193, 7.71894598]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.29210806, 6.29373789, 6.29447198]), 'fit_time': array([6.39526391, 6.24569511, 6.55176401]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.11065316, 0.09682488, 0.09453893]), 'fit_time': array([0.17311597, 0.14762306, 0.14648414]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11641884, 0.10914707, 0.11037898]), 'fit_time': array([0.14141703, 0.14315391, 0.1399281 ]), 'test_precision': array([1.        , 0.33333333, 0.6       ]), 'test_f1': array([0.2       , 0.17391304, 0.27272727]), 'test_recall': array([0.11111111, 0.11764706, 0.17647059])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21347499, 0.23087311, 0.21609807]), 'fit_time': array([0.18172002, 0.19580007, 0.18498111]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91237998, 5.90978384, 5.90957117]), 'fit_time': array([6.25339603, 6.60115695, 7.753757  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.27664304, 6.25654101, 6.25977182]), 'fit_time': array([6.3772459 , 6.21471906, 6.60214996]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10891795, 0.09603214, 0.09376192]), 'fit_time': array([0.17516518, 0.14919186, 0.15027308]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11693001, 0.12159491, 0.11207294]), 'fit_time': array([0.15228796, 0.16477799, 0.14776111]), 'test_precision': array([1. , 0.3, 0.4]), 'test_f1': array([0.5       , 0.22222222, 0.2962963 ]), 'test_recall': array([0.33333333, 0.17647059, 0.23529412])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21321416, 0.23101592, 0.21539497]), 'fit_time': array([0.18186593, 0.1959002 , 0.18592596]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.87478209, 5.87377   , 5.88290215]), 'fit_time': array([6.23783302, 6.60565901, 7.76808786]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26023507, 6.26500607, 6.26164699]), 'fit_time': array([6.38187504, 6.20493913, 6.57123995]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10774493, 0.09720922, 0.09321785]), 'fit_time': array([0.18004894, 0.16050601, 0.15402603]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11731505, 0.13170099, 0.11370897]), 'fit_time': array([0.15433288, 0.173558  , 0.15705514]), 'test_precision': array([0.77777778, 0.27272727, 0.35714286]), 'test_f1': array([0.51851852, 0.21428571, 0.32258065]), 'test_recall': array([0.38888889, 0.17647059, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21340919, 0.22964191, 0.21469998]), 'fit_time': array([0.18248081, 0.19625211, 0.18535614]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.89568186, 5.9148109 , 5.92264795]), 'fit_time': array([6.27677011, 6.59115005, 7.74579811]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.30275011, 6.3054719 , 6.30218196]), 'fit_time': array([6.42911983, 6.20840907, 6.55973315]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10911202, 0.09642911, 0.09381104]), 'fit_time': array([0.17676401, 0.15120101, 0.15618896]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11732602, 0.12784791, 0.11463094]), 'fit_time': array([0.15537405, 0.16984797, 0.15740705]), 'test_precision': array([0.63636364, 0.2       , 0.31578947]), 'test_f1': array([0.48275862, 0.1875    , 0.33333333]), 'test_recall': array([0.38888889, 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21506095, 0.23118401, 0.21908998]), 'fit_time': array([0.18191099, 0.19629407, 0.18539   ]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.92419219, 5.91791797, 5.92495203]), 'fit_time': array([6.25815701, 6.63782406, 7.72761011]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.29966211, 6.30414605, 6.30034804]), 'fit_time': array([6.3986268 , 6.25330305, 6.56089997]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10682201, 0.09632587, 0.09357285]), 'fit_time': array([0.18506408, 0.15320301, 0.15352011]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12089205, 0.12172198, 0.11966109]), 'fit_time': array([0.15896082, 0.16702914, 0.16175294]), 'test_precision': array([0.58333333, 0.21428571, 0.35      ]), 'test_f1': array([0.46666667, 0.19354839, 0.37837838]), 'test_recall': array([0.38888889, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21473098, 0.23074007, 0.216187  ]), 'fit_time': array([0.181952  , 0.19598889, 0.18534803]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.92290902, 5.91571712, 5.92297196]), 'fit_time': array([6.25710988, 6.63088799, 7.73846102]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.30927396, 6.30916309, 6.29834414]), 'fit_time': array([6.38356495, 6.22220588, 6.60400891]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10759282, 0.09546518, 0.09196496]), 'fit_time': array([0.17853904, 0.15759301, 0.15497518]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.12051606, 0.12207508, 0.11816382]), 'fit_time': array([0.15663695, 0.16675901, 0.16496301]), 'test_precision': array([0.5       , 0.14285714, 0.36363636]), 'test_f1': array([0.4375    , 0.12903226, 0.41025641]), 'test_recall': array([0.38888889, 0.11764706, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21498299, 0.23120999, 0.216501  ]), 'fit_time': array([0.18185687, 0.19613218, 0.18524313]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.92306399, 5.92263222, 5.91835904]), 'fit_time': array([6.24034691, 6.61143494, 7.77694702]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.29818392, 6.29829383, 6.29804587]), 'fit_time': array([6.38335919, 6.19720817, 6.56913614]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10574007, 0.09514713, 0.09173298]), 'fit_time': array([0.18811798, 0.15437198, 0.159796  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11911106, 0.12149286, 0.1166079 ]), 'fit_time': array([0.15823698, 0.16800714, 0.16385698]), 'test_precision': array([0.5       , 0.08333333, 0.36363636]), 'test_f1': array([0.4375    , 0.06896552, 0.41025641]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21431708, 0.23036098, 0.21619701]), 'fit_time': array([0.18223286, 0.19630718, 0.18497396]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91397905, 5.91260099, 8.90724397]), 'fit_time': array([6.27505207, 6.58400393, 9.78997302]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([15.51960802, 15.6909039 , 10.79451418]), 'fit_time': array([ 9.30487418, 17.21283603, 13.00454092]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.40389109, 0.38688612, 0.28622079]), 'fit_time': array([0.30438805, 0.56964993, 0.58015919]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.40491104, 0.45589185, 0.41682887]), 'fit_time': array([0.48370194, 0.62771106, 0.57944417]), 'test_precision': array([0.5       , 0.07692308, 0.36363636]), 'test_f1': array([0.4375    , 0.06666667, 0.41025641]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.79431891, 0.86779404, 0.72114515]), 'fit_time': array([0.62547612, 0.68301797, 0.61167502]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.67129993, 7.66479111, 5.88091707]), 'fit_time': array([16.04682398, 10.3978219 ,  7.80284786]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.29897118, 6.26646304, 6.25036502]), 'fit_time': array([6.39608288, 6.24847293, 6.55896688]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10675907, 0.09391689, 0.091295  ]), 'fit_time': array([0.18534803, 0.16544604, 0.16022801]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11633396, 0.121207  , 0.12039614]), 'fit_time': array([0.1575489 , 0.16843915, 0.16609597]), 'test_precision': array([0.5       , 0.07692308, 0.36363636]), 'test_f1': array([0.4375    , 0.06666667, 0.41025641]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21394801, 0.22981691, 0.21518302]), 'fit_time': array([0.18171406, 0.19598699, 0.18538094]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.87957406, 5.87634683, 5.87734294]), 'fit_time': array([6.28930688, 6.59140706, 7.71893191]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.27077603, 6.25817394, 6.25411415]), 'fit_time': array([6.39376402, 6.24471307, 6.55278492]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10514593, 0.09634089, 0.09131694]), 'fit_time': array([0.1954639 , 0.16911292, 0.16822886]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11596918, 0.1207571 , 0.12132001]), 'fit_time': array([0.15886688, 0.16815186, 0.16559386]), 'test_precision': array([0.5       , 0.07692308, 0.36363636]), 'test_f1': array([0.4375    , 0.06666667, 0.41025641]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21265101, 0.23006511, 0.21496916]), 'fit_time': array([0.181674  , 0.19599295, 0.18517089]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91530895, 5.87846589, 5.90982294]), 'fit_time': array([6.25265503, 6.6388979 , 7.72079515]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.2969501 , 6.30180097, 6.29095507]), 'fit_time': array([6.376827  , 6.21664619, 6.601753  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10675001, 0.095788  , 0.09067202]), 'fit_time': array([0.20015788, 0.17312002, 0.17267203]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11814785, 0.12112904, 0.12033081]), 'fit_time': array([0.15898108, 0.16854191, 0.16538501]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21423912, 0.23253012, 0.21603322]), 'fit_time': array([0.18173504, 0.19657993, 0.18466997]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91436386, 5.9067049 , 5.91831803]), 'fit_time': array([6.23190403, 6.60697103, 7.76680517]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.29484892, 6.29505992, 6.2965169 ]), 'fit_time': array([6.377877  , 6.2023201 , 6.56838012]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10586905, 0.09617496, 0.09089994]), 'fit_time': array([0.20009208, 0.177953  , 0.17388105]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11687994, 0.121099  , 0.11930299]), 'fit_time': array([0.15881085, 0.16838193, 0.16490388]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21416688, 0.231493  , 0.21624708]), 'fit_time': array([0.18211102, 0.19646382, 0.18511701]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.88373184, 5.89591885, 5.91420913]), 'fit_time': array([6.2771101 , 6.58549118, 7.73867202]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.29893613, 6.30414081, 6.29189801]), 'fit_time': array([6.42680383, 6.20478106, 6.56577897]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10962892, 0.09557986, 0.09080815]), 'fit_time': array([0.20406795, 0.18080711, 0.18172193]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11695719, 0.12251711, 0.11887312]), 'fit_time': array([0.15885782, 0.16831398, 0.16497684]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21419811, 0.23155904, 0.21899915]), 'fit_time': array([0.181741  , 0.19623184, 0.18526983]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91105008, 5.91114402, 5.91535091]), 'fit_time': array([6.29457903, 6.58986592, 7.72031403]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26891708, 6.26161408, 6.25226116]), 'fit_time': array([6.39638686, 6.25026178, 6.55399489]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10522294, 0.09617805, 0.09036589]), 'fit_time': array([0.20633793, 0.19285512, 0.19064498]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11636615, 0.12071896, 0.11833501]), 'fit_time': array([0.15875888, 0.16833305, 0.16495204]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21325898, 0.23204112, 0.21547389]), 'fit_time': array([0.181813  , 0.1959939 , 0.18605399]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.88307691, 5.89018106, 5.90997815]), 'fit_time': array([6.251863  , 6.63518691, 7.72163582]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.30604911, 6.30342698, 6.291435  ]), 'fit_time': array([6.38027096, 6.21421194, 6.60195494]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.1054039 , 0.09839511, 0.09079599]), 'fit_time': array([0.20778894, 0.19348598, 0.18726206]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11663485, 0.12144494, 0.12195706]), 'fit_time': array([0.15879917, 0.16833496, 0.16500497]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21363592, 0.23137307, 0.2161448 ]), 'fit_time': array([0.18173194, 0.19600487, 0.18525314]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.91501117, 5.90299678, 5.87732816]), 'fit_time': array([6.23283482, 6.60541701, 7.77082086]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26410317, 6.26073194, 6.2581799 ]), 'fit_time': array([6.37758398, 6.20926905, 6.56712699]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10539794, 0.09542084, 0.09038901]), 'fit_time': array([0.22498703, 0.20210314, 0.19031   ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11687398, 0.12134409, 0.11889696]), 'fit_time': array([0.15881205, 0.16834903, 0.16500998]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21333909, 0.22987294, 0.21568704]), 'fit_time': array([0.18172002, 0.19616294, 0.1851511 ]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.88875794, 5.87372017, 5.88251114]), 'fit_time': array([6.27595401, 6.5858829 , 7.73814797]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26113892, 6.26572704, 6.25345182]), 'fit_time': array([6.42668295, 6.19917798, 6.57048512]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.104949  , 0.09545279, 0.09038305]), 'fit_time': array([0.22279191, 0.22717905, 0.200634  ]), 'test_precision': array([0., 1., 1.]), 'test_f1': array([0.        , 0.11111111, 0.11111111]), 'test_recall': array([0.        , 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11691093, 0.12131596, 0.11897898]), 'fit_time': array([0.15873504, 0.16819715, 0.16510391]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21395397, 0.22998405, 0.21536398]), 'fit_time': array([0.18178582, 0.19607091, 0.18514514]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.88310599, 5.87862611, 5.87793207]), 'fit_time': array([6.28332996, 6.587327  , 7.71960402]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26926398, 6.26307297, 6.25025296]), 'fit_time': array([6.39383507, 6.25009704, 6.55320597]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10571408, 0.09584999, 0.0900929 ]), 'fit_time': array([0.24175286, 0.22260714, 0.22008395]), 'test_precision': array([0.        , 0.33333333, 0.5       ]), 'test_f1': array([0.        , 0.1       , 0.10526316]), 'test_recall': array([0.        , 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11835814, 0.12098503, 0.11859298]), 'fit_time': array([0.158988  , 0.17028499, 0.16586995]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.21452594, 0.22997308, 0.2154181 ]), 'fit_time': array([0.18172312, 0.19599891, 0.18517184]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.87632799, 5.87566495, 5.8759799 ]), 'fit_time': array([6.25155592, 6.63476896, 7.72038698]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26412416, 6.26660895, 6.25419903]), 'fit_time': array([6.38237286, 6.21341896, 6.60477519]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.10549092, 0.09534812, 0.09011507]), 'fit_time': array([0.23420811, 0.23592806, 0.22915292]), 'test_precision': array([0.        , 0.33333333, 0.5       ]), 'test_f1': array([0.        , 0.17391304, 0.10526316]), 'test_recall': array([0.        , 0.11764706, 0.05882353])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.11587405, 0.12075901, 0.11803198]), 'fit_time': array([0.15891504, 0.16863394, 0.16527891]), 'test_precision': array([0.5       , 0.07692308, 0.38095238]), 'test_f1': array([0.4375    , 0.06666667, 0.42105263]), 'test_recall': array([0.38888889, 0.05882353, 0.47058824])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.212466  , 0.23019505, 0.21524405]), 'fit_time': array([0.18201995, 0.19629788, 0.18529892]), 'test_precision': array([0.6, 1. , 0.5]), 'test_f1': array([0.26086957, 0.11111111, 0.26086957]), 'test_recall': array([0.16666667, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([5.88395596, 5.88452697, 5.87852597]), 'fit_time': array([6.23467207, 6.6060369 , 7.76709199]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.26495004, 6.26228809, 6.25499296]), 'fit_time': array([6.37747383, 6.21657491, 6.57910991]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([2.43875098, 2.74205399, 2.58470678]), 'fit_time': array([2.38673306, 2.70758295, 2.51777506]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('CV for PCA', 64)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.17556095, 0.15999794, 0.16312408]), 'fit_time': array([0.19771791, 0.15201592, 0.17113996]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.19622493, 0.18316698, 0.17978787]), 'fit_time': array([0.17762399, 0.16343999, 0.15579009]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48228192, 0.53687501, 0.47221303]), 'fit_time': array([0.35857415, 0.3951962 , 0.35322905]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51590014, 9.52320218, 9.51367688]), 'fit_time': array([ 9.38562799,  9.96164894, 10.0416832 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([24.93450403, 26.54097009, 17.09810996]), 'fit_time': array([12.10294008, 22.8158679 , 20.26776814]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.23381996, 0.15559602, 0.25091505]), 'fit_time': array([0.27442217, 0.21464086, 0.23126888]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.66465807, 0.64727902, 0.63641286]), 'fit_time': array([0.26025891, 0.61883092, 0.589921  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.48786902, 0.74064803, 0.76568294]), 'fit_time': array([1.2196939 , 0.59475708, 0.51363206]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51423502, 9.51300597, 9.51049495]), 'fit_time': array([11.8241539 ,  9.44124508, 10.51757503]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([10.00302792,  9.99623799,  9.99417186]), 'fit_time': array([9.75667095, 9.59220886, 9.85412192]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14847994, 0.15389299, 0.14524794]), 'fit_time': array([0.18931413, 0.1867919 , 0.18398499]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.18855309, 0.21362019, 0.20662689]), 'fit_time': array([0.21307898, 0.21557593, 0.21416116]), 'test_precision': array([0.63636364, 0.33333333, 0.42857143]), 'test_f1': array([0.48275862, 0.17391304, 0.25      ]), 'test_recall': array([0.38888889, 0.11764706, 0.17647059])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.49002218, 0.53206801, 0.50097013]), 'fit_time': array([0.37242079, 0.39915085, 0.37817502]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51344013, 9.51941299, 9.51151299]), 'fit_time': array([ 9.51959491,  9.393327  , 10.54844308]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([10.00313997,  9.992208  ,  9.98446703]), 'fit_time': array([9.71895194, 9.63234186, 9.84391308]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14563394, 0.15232491, 0.14355707]), 'fit_time': array([0.20185208, 0.19083309, 0.18545389]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21058393, 0.23535514, 0.21535301]), 'fit_time': array([0.22608089, 0.23955107, 0.22524381]), 'test_precision': array([0.53846154, 0.14285714, 0.33333333]), 'test_f1': array([0.4516129 , 0.08333333, 0.23076923]), 'test_recall': array([0.38888889, 0.05882353, 0.17647059])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.49214196, 0.53788805, 0.50111604]), 'fit_time': array([0.37014318, 0.39880896, 0.38659406]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51812696, 9.51141691, 9.50769782]), 'fit_time': array([ 9.53364086,  9.3731401 , 10.57410717]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([10.00109482, 10.01012301,  9.98601389]), 'fit_time': array([9.7030611 , 9.60298896, 9.87965703]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14660907, 0.15065098, 0.14269304]), 'fit_time': array([0.20066094, 0.19244504, 0.18830085]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21126008, 0.23351908, 0.21939993]), 'fit_time': array([0.22471499, 0.2413609 , 0.22094607]), 'test_precision': array([0.53846154, 0.125     , 0.22222222]), 'test_f1': array([0.4516129 , 0.08      , 0.15384615]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48971391, 0.53303313, 0.50191808]), 'fit_time': array([0.37031507, 0.39887881, 0.37831497]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.52318406, 9.50774312, 9.51352882]), 'fit_time': array([ 9.49867201,  9.42443109, 10.52910399]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.990978  , 9.99438906, 9.98730016]), 'fit_time': array([9.74261117, 9.5847249 , 9.90134001]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14674091, 0.15251994, 0.1421771 ]), 'fit_time': array([0.20586896, 0.20478606, 0.19776082]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21042204, 0.23924994, 0.21657109]), 'fit_time': array([0.2283721 , 0.24107003, 0.21755195]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.49263501, 0.53307486, 0.50227499]), 'fit_time': array([0.37017107, 0.39874506, 0.37837601]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51955986, 9.52622509, 9.51395488]), 'fit_time': array([ 9.48211718,  9.44423199, 10.52228403]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([ 9.99271607,  9.99305201, 10.00483012]), 'fit_time': array([9.71925592, 9.628829  , 9.84924698]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14651489, 0.15083694, 0.14226103]), 'fit_time': array([0.21041703, 0.19998813, 0.20269895]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21049285, 0.23928094, 0.21701598]), 'fit_time': array([0.22906303, 0.24138308, 0.21572399]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48901105, 0.53357506, 0.50199795]), 'fit_time': array([0.37262988, 0.39935017, 0.37823796]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.50818586, 9.51264405, 9.51252794]), 'fit_time': array([ 9.52199101,  9.39546204, 10.55309916]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.99968815, 9.99103189, 9.98630095]), 'fit_time': array([9.69813991, 9.64692593, 9.83933902]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14789605, 0.15065002, 0.14193797]), 'fit_time': array([0.20911789, 0.21367908, 0.19681907]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21107388, 0.23933983, 0.21647596]), 'fit_time': array([0.22822809, 0.24085808, 0.21572614]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48888707, 0.53602695, 0.50155807]), 'fit_time': array([0.37033606, 0.39873099, 0.3782239 ]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.50783801, 9.51495409, 9.53164911]), 'fit_time': array([ 9.53758407,  9.39293003, 10.52372694]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([ 9.9886651 , 10.00226808,  9.9856081 ]), 'fit_time': array([9.74243879, 9.60922384, 9.87581992]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14565802, 0.15077305, 0.14263701]), 'fit_time': array([0.2141552 , 0.21989298, 0.20249486]), 'test_precision': array([0., 0., 1.]), 'test_f1': array([0.        , 0.        , 0.11111111]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20911598, 0.23920202, 0.21649814]), 'fit_time': array([0.22836304, 0.24086905, 0.2156868 ]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48858404, 0.53297114, 0.50187397]), 'fit_time': array([0.37022901, 0.39856887, 0.37814212]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([ 9.5122261 ,  9.51139379, 10.86692595]), 'fit_time': array([ 9.50280404,  9.42311716, 10.50308919]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([14.7450881 , 13.07305503,  9.9792161 ]), 'fit_time': array([13.97094202, 15.00500298, 14.87557077]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14853907, 0.15042996, 0.14238811]), 'fit_time': array([0.21574283, 0.22029209, 0.21347284]), 'test_precision': array([0.        , 0.33333333, 0.33333333]), 'test_f1': array([0. , 0.1, 0.1]), 'test_recall': array([0.        , 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20875907, 0.24243093, 0.21652508]), 'fit_time': array([0.22817397, 0.24065804, 0.21580195]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.49161005, 0.53260684, 0.50554609]), 'fit_time': array([0.37027693, 0.39889121, 0.37810993]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([ 9.52040291,  9.5043509 , 13.42918921]), 'fit_time': array([ 9.50258303,  9.42281818, 13.36836982]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([18.31999087, 18.305722  , 13.97719407]), 'fit_time': array([15.92752099, 16.042974  , 14.82961011]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.1454711 , 0.151757  , 0.20375419]), 'fit_time': array([0.22069192, 0.22486901, 0.21414089]), 'test_precision': array([0.        , 0.33333333, 0.33333333]), 'test_f1': array([0. , 0.1, 0.1]), 'test_recall': array([0.        , 0.05882353, 0.05882353])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.26610899, 0.32227302, 0.28736901]), 'fit_time': array([0.25099397, 0.24133086, 0.28795195]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.66220808, 0.72554493, 0.67896795]), 'fit_time': array([0.49107695, 0.52359891, 0.49734807]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51807404, 9.50998998, 9.51377392]), 'fit_time': array([13.33572888,  9.447438  , 10.50812101]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([10.01154804, 10.00158501,  9.99568796]), 'fit_time': array([9.76534295, 9.60631919, 9.85568595]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14552093, 0.15339494, 0.14250803]), 'fit_time': array([0.23419285, 0.22668099, 0.21882105]), 'test_precision': array([0.  , 0.25, 0.4 ]), 'test_f1': array([0.        , 0.0952381 , 0.18181818]), 'test_recall': array([0.        , 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20814109, 0.23941612, 0.21960711]), 'fit_time': array([0.22827387, 0.24127007, 0.21589994]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48522401, 0.52787209, 0.49857807]), 'fit_time': array([0.37271094, 0.39955592, 0.37857604]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.51726508, 9.514112  , 9.50967503]), 'fit_time': array([ 9.52702999,  9.39991498, 10.557652  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([10.00246501, 10.00463009,  9.98708606]), 'fit_time': array([9.72565389, 9.64017296, 9.83669305]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14640594, 0.14646888, 0.14599013]), 'fit_time': array([0.22583795, 0.23965812, 0.22435188]), 'test_precision': array([1. , 0.2, 0.4]), 'test_f1': array([0.10526316, 0.09090909, 0.18181818]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20833802, 0.23873401, 0.216434  ]), 'fit_time': array([0.22836113, 0.24092507, 0.21559095]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48814201, 0.52681208, 0.49769402]), 'fit_time': array([0.37035513, 0.39878607, 0.37843704]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.5137651 , 9.49472284, 9.49348092]), 'fit_time': array([ 9.55954385,  9.38093805, 10.57086706]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.98118615, 9.99713397, 9.96978998]), 'fit_time': array([9.72240996, 9.61339188, 9.88525796]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14511991, 0.15058398, 0.14338994]), 'fit_time': array([0.23555994, 0.25671291, 0.22822785]), 'test_precision': array([1.        , 0.33333333, 0.4       ]), 'test_f1': array([0.10526316, 0.17391304, 0.18181818]), 'test_recall': array([0.05555556, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20889902, 0.23906589, 0.21640706]), 'fit_time': array([0.22823691, 0.24091911, 0.21567202]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48609304, 0.52683783, 0.49684978]), 'fit_time': array([0.37052083, 0.40087318, 0.37852216]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.50590801, 9.49605989, 9.49813914]), 'fit_time': array([ 9.50554919,  9.43538713, 10.53639388]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.97151494, 9.9802568 , 9.97108793]), 'fit_time': array([9.7561152 , 9.59817815, 9.90130806]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.145123  , 0.15142012, 0.14321804]), 'fit_time': array([0.23580384, 0.25551796, 0.23160315]), 'test_precision': array([0.5       , 0.28571429, 0.33333333]), 'test_f1': array([0.1       , 0.16666667, 0.17391304]), 'test_recall': array([0.05555556, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.2112999 , 0.23896694, 0.21654606]), 'fit_time': array([0.22834396, 0.24104309, 0.21582508]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48789787, 0.527282  , 0.49793911]), 'fit_time': array([0.37025714, 0.39904594, 0.37869906]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.50022101, 9.496593  , 9.49493003]), 'fit_time': array([ 9.49538398,  9.43853307, 10.53346705]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.98965216, 9.9794991 , 9.98380113]), 'fit_time': array([9.72446489, 9.64347196, 9.85943294]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14513206, 0.15933299, 0.14258099]), 'fit_time': array([0.24650502, 0.26652217, 0.24793601]), 'test_precision': array([0.6       , 0.28571429, 0.28571429]), 'test_f1': array([0.26086957, 0.16666667, 0.16666667]), 'test_recall': array([0.16666667, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20865703, 0.23891497, 0.21634793]), 'fit_time': array([0.22825694, 0.24117088, 0.21578503]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48538804, 0.52898598, 0.497612  ]), 'fit_time': array([0.37220979, 0.39978814, 0.37865901]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.48783922, 9.49120593, 9.50361514]), 'fit_time': array([ 9.52828288,  9.40175915, 10.56954002]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.97842097, 9.98230791, 9.97554302]), 'fit_time': array([9.70605588, 9.65959096, 9.85753489]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14848709, 0.15760207, 0.14488101]), 'fit_time': array([0.24495411, 0.27694201, 0.25541091]), 'test_precision': array([0.66666667, 0.28571429, 0.28571429]), 'test_f1': array([0.33333333, 0.16666667, 0.16666667]), 'test_recall': array([0.22222222, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.21079993, 0.23926306, 0.21734214]), 'fit_time': array([0.22839403, 0.24123287, 0.21582484]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.4845171 , 0.52818799, 0.49783611]), 'fit_time': array([0.37040305, 0.39927697, 0.37872291]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.49914193, 9.49988508, 9.52456999]), 'fit_time': array([ 9.54718089,  9.40476704, 10.534163  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.97113395, 9.97977114, 9.97675514]), 'fit_time': array([9.75278616, 9.61688185, 9.8995719 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.1515739 , 0.16308904, 0.1423769 ]), 'fit_time': array([0.26275802, 0.2896359 , 0.26819515]), 'test_precision': array([0.44444444, 0.28571429, 0.25      ]), 'test_f1': array([0.2962963 , 0.16666667, 0.16      ]), 'test_recall': array([0.22222222, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20836592, 0.23949385, 0.21644497]), 'fit_time': array([0.22854018, 0.24105906, 0.21584201]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48561406, 0.52710414, 0.49863505]), 'fit_time': array([0.37046289, 0.39917707, 0.37929296]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.49365783, 9.49489784, 9.49940109]), 'fit_time': array([ 9.50465417,  9.43865514, 10.516675  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.98262906, 9.9882431 , 9.98043108]), 'fit_time': array([9.75501394, 9.62794399, 9.86223793]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.14926505, 0.16155195, 0.14699388]), 'fit_time': array([0.27807307, 0.31695819, 0.270818  ]), 'test_precision': array([0.4       , 0.33333333, 0.2       ]), 'test_f1': array([0.28571429, 0.17391304, 0.14814815]), 'test_recall': array([0.22222222, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20934105, 0.24085593, 0.21652198]), 'fit_time': array([0.2291069 , 0.24114513, 0.21640301]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48488283, 0.52716017, 0.49929714]), 'fit_time': array([0.3716011 , 0.39979792, 0.37896395]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.49453616, 9.50092292, 9.500458  ]), 'fit_time': array([ 9.527246  ,  9.404423  , 10.56407595]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.97894192, 9.98116088, 9.97670007]), 'fit_time': array([9.72285295, 9.65294003, 9.84762001]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.15295291, 0.16598296, 0.14365101]), 'fit_time': array([0.27522302, 0.32621408, 0.28508282]), 'test_precision': array([0.4       , 0.33333333, 0.2       ]), 'test_f1': array([0.28571429, 0.17391304, 0.14814815]), 'test_recall': array([0.22222222, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.2085669 , 0.23870516, 0.21933794]), 'fit_time': array([0.22863603, 0.24102998, 0.21610689]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48460698, 0.5266521 , 0.49699688]), 'fit_time': array([0.37038112, 0.399158  , 0.37865996]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.50125384, 9.49203706, 9.49727106]), 'fit_time': array([ 9.55450702,  9.38926411, 10.56523681]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.98778892, 9.98621202, 9.9728179 ]), 'fit_time': array([9.72496915, 9.60997987, 9.88734913]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.15998101, 0.16565514, 0.14819908]), 'fit_time': array([0.28486586, 0.32904387, 0.29106092]), 'test_precision': array([0.46153846, 0.33333333, 0.22222222]), 'test_f1': array([0.38709677, 0.17391304, 0.15384615]), 'test_recall': array([0.33333333, 0.11764706, 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.20797396, 0.2392571 , 0.21986103]), 'fit_time': array([0.22840619, 0.24122882, 0.21572304]), 'test_precision': array([0.4375, 0.125 , 0.2   ]), 'test_f1': array([0.41176471, 0.08      , 0.14814815]), 'test_recall': array([0.38888889, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([0.48434997, 0.52825594, 0.49696493]), 'fit_time': array([0.37041903, 0.39927602, 0.37889004]), 'test_precision': array([0.5, 1. , 1. ]), 'test_f1': array([0.1       , 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([9.50268006, 9.49688005, 9.49292302]), 'fit_time': array([ 9.50444603,  9.44487596, 10.53566098]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([9.97793293, 9.98244905, 9.97566009]), 'fit_time': array([9.75303817, 9.59834695, 9.89965105]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([1.17737603, 1.466681  , 1.30091   ]), 'fit_time': array([0.90896487, 1.14366078, 1.00799894]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('CV for PCA', 128)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26433587, 0.24289799, 0.23895693]), 'fit_time': array([0.2574501 , 0.23147702, 0.22871518]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.33502102, 0.33326006, 0.28969693]), 'fit_time': array([0.27732897, 0.27729702, 0.25342202]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.18174815, 1.34926701, 1.22147894]), 'fit_time': array([0.87072277, 0.98967719, 0.89650893]), 'test_precision': array([0., 0., 1.]), 'test_f1': array([0.        , 0.        , 0.11111111]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.00514603, 16.99130201, 16.9912169 ]), 'fit_time': array([16.20371604, 17.05303693, 17.15973806]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.58001399, 17.59170604, 17.62553596]), 'fit_time': array([15.90543199, 16.08478093, 16.24857903]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25679803, 0.25243282, 0.23730016]), 'fit_time': array([0.28657198, 0.27092004, 0.25182199]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.33874607, 0.33897305, 0.29725409]), 'fit_time': array([0.30485201, 0.30354095, 0.265239  ]), 'test_precision': array([1. , 0.5, 0.8]), 'test_f1': array([0.43478261, 0.10526316, 0.36363636]), 'test_recall': array([0.27777778, 0.05882353, 0.23529412])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20454812, 1.36986494, 1.23169899]), 'fit_time': array([0.90567088, 1.02452302, 0.92079902]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.98127508, 16.99103284, 16.98330593]), 'fit_time': array([16.35799599, 16.3073442 , 17.96593308]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.60594296, 17.58934903, 17.59486985]), 'fit_time': array([16.76233602, 16.53662205, 16.92755604]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25775218, 0.25301814, 0.23581481]), 'fit_time': array([0.28948903, 0.27529383, 0.24840498]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38374591, 0.40617704, 0.35684204]), 'fit_time': array([0.33824515, 0.37149906, 0.3301661 ]), 'test_precision': array([0.5625    , 0.25      , 0.71428571]), 'test_f1': array([0.52941176, 0.0952381 , 0.41666667]), 'test_recall': array([0.5       , 0.05882353, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20480609, 1.37163401, 1.23283505]), 'fit_time': array([0.90494299, 1.02264786, 0.9198761 ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.98259091, 16.94418812, 17.00020194]), 'fit_time': array([16.35945201, 16.42045689, 17.97138906]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.61691499, 23.9566462 , 31.52999687]), 'fit_time': array([16.72154999, 18.70628881, 30.36842799]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.59276915, 0.68998504, 0.76746202]), 'fit_time': array([0.65335608, 0.62021995, 0.61336899]), 'test_precision': array([0., 0., 1.]), 'test_f1': array([0. , 0. , 0.3]), 'test_recall': array([0.        , 0.        , 0.17647059])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.80101395, 1.32288599, 1.103894  ]), 'fit_time': array([1.11322999, 1.11468911, 1.13794804]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.8187511 , 2.709759  , 2.88422704]), 'fit_time': array([1.80741882, 2.28614998, 2.18891811]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([20.10948086, 17.04340506, 17.03953099]), 'fit_time': array([23.22708893, 16.38934898, 17.98077202]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.68401694, 17.67521214, 17.64854503]), 'fit_time': array([16.77869105, 16.59454894, 16.98773408]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.256917  , 0.25516701, 0.22695994]), 'fit_time': array([0.29656196, 0.29826593, 0.28055596]), 'test_precision': array([1.  , 0.75, 0.5 ]), 'test_f1': array([0.36363636, 0.28571429, 0.32      ]), 'test_recall': array([0.22222222, 0.17647059, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38128996, 0.39894414, 0.37107015]), 'fit_time': array([0.34222794, 0.36185193, 0.34230185]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.206002  , 1.36927605, 1.238976  ]), 'fit_time': array([0.90016103, 1.02345109, 0.92195415]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.02634501, 17.02941704, 17.07888389]), 'fit_time': array([16.41505885, 16.36512303, 17.962924  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.66731286, 17.66318893, 17.64501095]), 'fit_time': array([16.78169703, 16.61870599, 16.97412801]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25697398, 0.26540303, 0.23351002]), 'fit_time': array([0.30141783, 0.32042003, 0.27850199]), 'test_precision': array([0.875, 0.375, 0.5  ]), 'test_f1': array([0.53846154, 0.24      , 0.32      ]), 'test_recall': array([0.38888889, 0.17647059, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38184905, 0.39870715, 0.37265611]), 'fit_time': array([0.34232783, 0.36187291, 0.34215307]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20824003, 1.369066  , 1.23428297]), 'fit_time': array([0.90096283, 1.02430391, 0.92184114]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.0384481 , 17.02634096, 17.02111506]), 'fit_time': array([16.41142201, 16.34771705, 17.96333504]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.67332101, 17.65398908, 17.63273001]), 'fit_time': array([16.84584594, 16.61497903, 16.91669798]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26181102, 0.27490497, 0.23922706]), 'fit_time': array([0.31643891, 0.32898784, 0.28628302]), 'test_precision': array([0.9       , 0.44444444, 0.5       ]), 'test_f1': array([0.64285714, 0.30769231, 0.32      ]), 'test_recall': array([0.5       , 0.23529412, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.381392  , 0.39888096, 0.37161613]), 'fit_time': array([0.34255791, 0.36230087, 0.34240794]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20655799, 1.3697319 , 1.23463583]), 'fit_time': array([0.90578508, 1.02326202, 0.92545319]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.00416899, 17.04714799, 17.03179407]), 'fit_time': array([16.39161801, 16.33904004, 17.99072003]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.65402412, 17.69213009, 17.65931082]), 'fit_time': array([16.88961506, 16.56126285, 16.9813621 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.266958  , 0.276968  , 0.23753405]), 'fit_time': array([0.32023692, 0.34364796, 0.30356503]), 'test_precision': array([0.9       , 0.44444444, 0.44444444]), 'test_f1': array([0.64285714, 0.30769231, 0.30769231]), 'test_recall': array([0.5       , 0.23529412, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38101387, 0.39858413, 0.37119198]), 'fit_time': array([0.34301615, 0.36253786, 0.34241891]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20974016, 1.36904001, 1.23535299]), 'fit_time': array([0.90683794, 1.02328396, 0.92253804]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.05642009, 17.02483892, 17.07484698]), 'fit_time': array([16.39380789, 16.34930611, 17.99411011]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.65974593, 17.68192792, 17.64852095]), 'fit_time': array([16.76138306, 16.61422706, 16.963341  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26270795, 0.29101515, 0.23758292]), 'fit_time': array([0.32356906, 0.35115695, 0.30597401]), 'test_precision': array([0.75      , 0.45454545, 0.57142857]), 'test_f1': array([0.6       , 0.35714286, 0.33333333]), 'test_recall': array([0.5       , 0.29411765, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38098812, 0.39950418, 0.37130284]), 'fit_time': array([0.34213305, 0.36212301, 0.3424871 ]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.21406817, 1.36967301, 1.23446393]), 'fit_time': array([0.90204787, 1.03706217, 0.92236805]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.03299403, 17.05883813, 17.02618217]), 'fit_time': array([16.3981328 , 16.37349796, 17.93293095]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.64693117, 17.67109513, 17.63883495]), 'fit_time': array([16.79006004, 16.56023097, 16.97526121]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25500584, 0.28553295, 0.23356819]), 'fit_time': array([0.33166313, 0.35455608, 0.30245399]), 'test_precision': array([0.75      , 0.45454545, 0.57142857]), 'test_f1': array([0.6       , 0.35714286, 0.33333333]), 'test_recall': array([0.5       , 0.29411765, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38432908, 0.39942288, 0.37142301]), 'fit_time': array([0.34237909, 0.36203599, 0.34233618]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20627308, 1.36933208, 1.23431182]), 'fit_time': array([0.90004992, 1.02172804, 0.92151308]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.98143005, 17.09474492, 17.03439307]), 'fit_time': array([16.41093993, 16.33215404, 17.99679494]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.65099096, 17.66144991, 17.63790202]), 'fit_time': array([16.77539802, 16.64850307, 16.93729687]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25715685, 0.27918482, 0.23732209]), 'fit_time': array([0.3285501 , 0.34877706, 0.31685901]), 'test_precision': array([0.64285714, 0.4       , 0.55555556]), 'test_f1': array([0.5625    , 0.2962963 , 0.38461538]), 'test_recall': array([0.5       , 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.3841908 , 0.39947391, 0.37133288]), 'fit_time': array([0.34237599, 0.36237216, 0.34218597]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20640206, 1.3726151 , 1.23650408]), 'fit_time': array([0.90566206, 1.02348304, 0.921808  ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.02566791, 17.03149605, 17.10066414]), 'fit_time': array([16.40837216, 16.35964894, 17.98671389]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.65002489, 17.66403389, 17.67223716]), 'fit_time': array([16.78565311, 16.57176495, 16.96143699]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26029015, 0.27727199, 0.23402023]), 'fit_time': array([0.33363605, 0.34448195, 0.30990887]), 'test_precision': array([0.5625    , 0.44444444, 0.55555556]), 'test_f1': array([0.52941176, 0.30769231, 0.38461538]), 'test_recall': array([0.5       , 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38268995, 0.39894319, 0.37271094]), 'fit_time': array([0.34246397, 0.36222196, 0.34226203]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20783615, 1.37220693, 1.23468804]), 'fit_time': array([0.90669203, 1.0242331 , 0.92361903]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.03702807, 17.041471  , 17.03834009]), 'fit_time': array([16.4161489 , 16.34040999, 18.0234251 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.65366483, 17.66503906, 17.65134907]), 'fit_time': array([16.76849914, 16.59596205, 16.99830604]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26917815, 0.28706288, 0.23352909]), 'fit_time': array([0.34155393, 0.35966921, 0.32706594]), 'test_precision': array([0.5625    , 0.44444444, 0.5       ]), 'test_f1': array([0.52941176, 0.30769231, 0.37037037]), 'test_recall': array([0.5       , 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38284206, 0.40166593, 0.37256002]), 'fit_time': array([0.34242105, 0.36218905, 0.34275985]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20605588, 1.36908293, 1.23743391]), 'fit_time': array([0.90723205, 1.0250082 , 0.92160702]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.04774594, 22.60687685, 26.57151604]), 'fit_time': array([16.43487215, 17.18916106, 29.0180099 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([23.56382298, 22.22111201, 17.61355996]), 'fit_time': array([17.64667606, 26.07024789, 16.98777103]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25642395, 0.27578902, 0.2374568 ]), 'fit_time': array([0.34292889, 0.35496998, 0.32089806]), 'test_precision': array([0.55555556, 0.44444444, 0.45454545]), 'test_f1': array([0.55555556, 0.30769231, 0.35714286]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38014698, 0.39815903, 0.37056708]), 'fit_time': array([0.34038401, 0.35990191, 0.34008503]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20487309, 1.36803102, 1.23310804]), 'fit_time': array([0.89386582, 1.01621509, 0.91711402]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.98022604, 16.99882293, 16.99530697]), 'fit_time': array([16.27918983, 16.20183301, 17.86433291]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.62648201, 17.60648513, 17.58825707]), 'fit_time': array([16.65791011, 16.50658393, 16.83926201]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26059723, 0.27787709, 0.23531199]), 'fit_time': array([0.35323691, 0.35075998, 0.33076286]), 'test_precision': array([0.5       , 0.36363636, 0.45454545]), 'test_f1': array([0.52631579, 0.28571429, 0.35714286]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38090801, 0.39854002, 0.37198305]), 'fit_time': array([0.34013295, 0.35984087, 0.34050584]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20482016, 1.3680799 , 1.23287392]), 'fit_time': array([0.89993286, 1.01831317, 0.91643906]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.00353193, 17.05028391, 16.99372005]), 'fit_time': array([16.27841806, 16.28279209, 17.86429596]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.60380387, 18.10726023, 17.64130902]), 'fit_time': array([16.6647861 , 16.48793697, 16.92644906]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26999617, 0.27357721, 0.24270606]), 'fit_time': array([0.35327196, 0.3574388 , 0.33707404]), 'test_precision': array([0.5       , 0.33333333, 0.41666667]), 'test_f1': array([0.52631579, 0.27586207, 0.34482759]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38126802, 0.39866281, 0.37112403]), 'fit_time': array([0.34075189, 0.36173916, 0.34134912]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.2053349 , 1.36987901, 1.23341513]), 'fit_time': array([0.90244389, 1.02251291, 0.91806984]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.01601195, 16.95090103, 16.99888992]), 'fit_time': array([16.306247  , 16.33634806, 17.94020104]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.55940509, 17.63470316, 17.5870769 ]), 'fit_time': array([16.653337  , 16.6066668 , 16.91748714]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26431918, 0.26792789, 0.24439192]), 'fit_time': array([0.35541296, 0.35678911, 0.34014797]), 'test_precision': array([0.43478261, 0.33333333, 0.41666667]), 'test_f1': array([0.48780488, 0.27586207, 0.34482759]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38038683, 0.39941406, 0.37079716]), 'fit_time': array([0.34091806, 0.36943507, 0.3442688 ]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20787406, 1.36787105, 1.23261499]), 'fit_time': array([0.90365601, 1.0206461 , 0.91935897]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.97600293, 16.959589  , 16.98320603]), 'fit_time': array([16.33295703, 16.29433513, 17.91268706]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.58571887, 17.59230208, 17.59208298]), 'fit_time': array([16.76981497, 16.57615304, 16.92389703]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.27023602, 0.27145815, 0.25499701]), 'fit_time': array([0.362988  , 0.35836101, 0.34321308]), 'test_precision': array([0.43478261, 0.25      , 0.41666667]), 'test_f1': array([0.48780488, 0.24242424, 0.34482759]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38018394, 0.39844298, 0.37073684]), 'fit_time': array([0.34117007, 0.36093497, 0.34098816]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20761204, 1.36782098, 1.23203588]), 'fit_time': array([0.89679003, 1.01874089, 0.91836905]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.98591614, 17.00493097, 17.00217485]), 'fit_time': array([16.3282578 , 16.30681801, 17.91124511]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.60159707, 17.61881089, 17.61809683]), 'fit_time': array([16.71422696, 16.55943513, 16.89092207]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26221204, 0.27555418, 0.23971105]), 'fit_time': array([0.36211801, 0.35036683, 0.33538198]), 'test_precision': array([0.41666667, 0.25      , 0.33333333]), 'test_f1': array([0.47619048, 0.24242424, 0.3125    ]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.3836298 , 0.39906812, 0.37120318]), 'fit_time': array([0.3410511 , 0.36146498, 0.34144402]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20496893, 1.36848807, 1.23285317]), 'fit_time': array([0.90090799, 1.01896   , 0.92308283]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.98502016, 16.966923  , 16.97772193]), 'fit_time': array([16.36580491, 16.29094386, 17.90229893]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.66055393, 17.64405417, 17.64001012]), 'fit_time': array([16.69897294, 16.56149697, 16.91021299]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.26490402, 0.27148008, 0.24061298]), 'fit_time': array([0.3533411 , 0.34510207, 0.33438611]), 'test_precision': array([0.41666667, 0.22222222, 0.3125    ]), 'test_f1': array([0.47619048, 0.22857143, 0.3030303 ]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38318896, 0.3986001 , 0.37034702]), 'fit_time': array([0.34097695, 0.36121988, 0.34118986]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20578003, 1.37126303, 1.23247313]), 'fit_time': array([0.90307784, 1.02035499, 0.91868401]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([17.01180506, 16.95368814, 17.03299117]), 'fit_time': array([16.32432294, 16.29057693, 17.92136478]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.59042215, 17.614007  , 17.62463808]), 'fit_time': array([16.6979959 , 16.53864408, 16.93656087]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.25589418, 0.26445603, 0.24425507]), 'fit_time': array([0.35464692, 0.34807396, 0.34285498]), 'test_precision': array([0.43478261, 0.21052632, 0.26315789]), 'test_f1': array([0.48780488, 0.22222222, 0.27777778]), 'test_recall': array([0.55555556, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.38213801, 0.39880991, 0.37077212]), 'fit_time': array([0.34368801, 0.36429715, 0.3428359 ]), 'test_precision': array([0.52941176, 0.33333333, 0.625     ]), 'test_f1': array([0.51428571, 0.17391304, 0.4       ]), 'test_recall': array([0.5       , 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([1.20586586, 1.37089109, 1.23326802]), 'fit_time': array([0.91163111, 1.02802086, 0.9244318 ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([16.97086501, 17.0060401 , 16.998456  ]), 'fit_time': array([16.31759501, 16.31127095, 17.92737412]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([17.61912918, 17.61486506, 17.64599085]), 'fit_time': array([16.68864679, 16.5377171 , 16.95294595]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([0.87889099, 0.99951506, 0.93140006]), 'fit_time': array([0.65656304, 0.74167204, 0.6926589 ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.2       , 0.11111111, 0.21052632]), 'test_recall': array([0.11111111, 0.05882353, 0.11764706])})
('CV for PCA', 256)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54676795, 0.56932497, 0.51863003]), 'fit_time': array([0.51364493, 0.51752114, 0.46312809]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.68611908, 0.67296505, 0.6079638 ]), 'fit_time': array([0.57184505, 0.55168605, 0.49789715]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06112599, 3.39919686, 3.23150611]), 'fit_time': array([2.3625052 , 2.60197806, 2.46751595]), 'test_precision': array([0., 0., 1.]), 'test_f1': array([0.        , 0.        , 0.11111111]), 'test_recall': array([0.        , 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([34.38417387, 35.01610398, 31.29552817]), 'fit_time': array([31.07168102, 32.71528792, 30.09347892]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.50558901, 31.92547584, 31.93738484]), 'fit_time': array([27.72516203, 28.84284401, 28.42690301]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.55591798, 0.53560305, 0.52456713]), 'fit_time': array([0.47929597, 0.46974707, 0.44034481]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.69102597, 0.66868496, 0.61886406]), 'fit_time': array([0.54752111, 0.52652812, 0.50038981]), 'test_precision': array([1.        , 0.5       , 0.66666667]), 'test_f1': array([0.61538462, 0.10526316, 0.34782609]), 'test_recall': array([0.44444444, 0.05882353, 0.23529412])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06104398, 3.52286696, 3.23321486]), 'fit_time': array([2.14988685, 2.46835208, 2.25813222]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.31487703, 31.27231002, 31.27961802]), 'fit_time': array([28.44212985, 28.437819  , 31.296947  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.99007297, 31.94695807, 31.90057206]), 'fit_time': array([29.25239801, 28.75255179, 29.59697104]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56215692, 0.53400612, 0.53154683]), 'fit_time': array([0.51476097, 0.49646902, 0.46684813]), 'test_precision': array([0., 0., 1.]), 'test_f1': array([0.        , 0.        , 0.21052632]), 'test_recall': array([0.        , 0.        , 0.11764706])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79153609, 0.79158807, 0.73864412]), 'fit_time': array([0.62158895, 0.61930585, 0.59963608]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06496215, 3.52322483, 3.23289609]), 'fit_time': array([2.13724899, 2.4686501 , 2.25924397]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.30821705, 31.32765603, 31.3140552 ]), 'fit_time': array([28.42841506, 28.49049997, 31.26877093]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.05131292, 31.92452502, 31.91252589]), 'fit_time': array([29.27333498, 28.74621201, 29.64228702]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56918311, 0.54817915, 0.52736902]), 'fit_time': array([0.5335319 , 0.50492883, 0.49620986]), 'test_precision': array([1.        , 0.66666667, 1.        ]), 'test_f1': array([0.56      , 0.2       , 0.38095238]), 'test_recall': array([0.38888889, 0.11764706, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79158688, 0.79142213, 0.7382381 ]), 'fit_time': array([0.62186503, 0.62011385, 0.59973192]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06435704, 3.52294683, 3.2330761 ]), 'fit_time': array([2.13855386, 2.46813202, 2.26122594]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.33315706, 31.28590703, 31.28074217]), 'fit_time': array([28.434515  , 28.48624802, 31.30657387]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.92816401, 31.89225292, 32.32815719]), 'fit_time': array([29.23934007, 28.84953594, 29.54054093]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.5523231 , 0.54492879, 0.52798104]), 'fit_time': array([0.53295612, 0.52735305, 0.50793409]), 'test_precision': array([0.9       , 0.8       , 0.83333333]), 'test_f1': array([0.64285714, 0.36363636, 0.43478261]), 'test_recall': array([0.5       , 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79563212, 0.79149485, 0.73909283]), 'fit_time': array([0.62173009, 0.62025118, 0.60338306]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06354094, 3.53210402, 3.23443007]), 'fit_time': array([2.14018106, 2.46912909, 2.27059793]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.32178998, 31.58012605, 31.3017199 ]), 'fit_time': array([28.46241021, 28.44735503, 31.33289599]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.00423312, 31.91498184, 31.8849988 ]), 'fit_time': array([29.21836305, 28.80799198, 29.58694816]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56445694, 0.56397891, 0.534513  ]), 'fit_time': array([0.54338789, 0.56673217, 0.50604296]), 'test_precision': array([0.81818182, 0.71428571, 0.75      ]), 'test_f1': array([0.62068966, 0.41666667, 0.48      ]), 'test_recall': array([0.5       , 0.29411765, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79575896, 0.79176092, 0.73867321]), 'fit_time': array([0.62283707, 0.62076092, 0.60034585]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06308699, 3.52836704, 3.23415422]), 'fit_time': array([2.14653301, 2.47074294, 2.26242995]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.30918384, 31.30411291, 31.31845188]), 'fit_time': array([28.46656108, 28.48974609, 31.3798902 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.92791605, 31.92115712, 31.90335488]), 'fit_time': array([29.26676393, 28.7798779 , 29.56017709]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56674314, 0.57329392, 0.51869416]), 'fit_time': array([0.55611587, 0.57304811, 0.52372003]), 'test_precision': array([0.75      , 0.66666667, 0.75      ]), 'test_f1': array([0.6       , 0.34782609, 0.48      ]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79221702, 0.79151201, 0.73877501]), 'fit_time': array([0.62366819, 0.6192832 , 0.59972596]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06298184, 3.52471113, 3.23268914]), 'fit_time': array([2.13938808, 2.46746278, 2.25972891]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.32489586, 31.31135988, 31.35961103]), 'fit_time': array([28.47910595, 28.4514792 , 31.31178999]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.92763519, 31.91708899, 32.57097697]), 'fit_time': array([29.22087002, 28.79644704, 29.56910491]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56573701, 0.56488299, 0.54811406]), 'fit_time': array([0.57104802, 0.57519007, 0.55520296]), 'test_precision': array([0.5625, 0.5   , 0.75  ]), 'test_f1': array([0.52941176, 0.26086957, 0.48      ]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.7926209 , 0.79485512, 0.73800516]), 'fit_time': array([0.62249994, 0.62018394, 0.59969401]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.062114  , 3.52356791, 3.23639703]), 'fit_time': array([2.14749098, 2.47007298, 2.26090598]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.2928462 , 31.26306796, 31.30539608]), 'fit_time': array([28.44471097, 28.51756907, 31.2867229 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.90116191, 31.95223689, 31.95106387]), 'fit_time': array([29.309057  , 28.77665305, 29.55682302]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.57004285, 0.57754898, 0.55502415]), 'fit_time': array([0.57452798, 0.55931091, 0.54710889]), 'test_precision': array([0.5625, 0.5   , 0.75  ]), 'test_f1': array([0.52941176, 0.26086957, 0.48      ]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79246497, 0.79197502, 0.73720503]), 'fit_time': array([0.62158012, 0.61941409, 0.59965396]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.05913711, 3.52349997, 3.23245907]), 'fit_time': array([2.139575  , 2.46691298, 2.25836301]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.28619409, 31.30701494, 31.2694819 ]), 'fit_time': array([28.47164106, 28.42824888, 31.29884696]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.9762311 , 31.93885589, 31.89175916]), 'fit_time': array([29.24205303, 28.84301805, 29.55840302]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.57186389, 0.58899522, 0.56467509]), 'fit_time': array([0.56871104, 0.56331992, 0.56051803]), 'test_precision': array([0.5625    , 0.42857143, 0.75      ]), 'test_f1': array([0.52941176, 0.25      , 0.48      ]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79230118, 0.79199004, 0.74076009]), 'fit_time': array([0.62195683, 0.61957502, 0.59918094]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06026888, 3.52274299, 3.232306  ]), 'fit_time': array([2.14457107, 2.46723509, 2.26140904]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.36814904, 31.67452693, 31.27490997]), 'fit_time': array([28.45010209, 28.50686216, 31.28448296]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.96521592, 31.90132904, 31.91083908]), 'fit_time': array([29.2375021 , 28.76433802, 29.56291199]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56685209, 0.59022498, 0.58038712]), 'fit_time': array([0.57334495, 0.57203603, 0.55973291]), 'test_precision': array([0.52941176, 0.33333333, 0.7       ]), 'test_f1': array([0.51428571, 0.23076923, 0.51851852]), 'test_recall': array([0.5       , 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79212809, 0.79180717, 0.73717403]), 'fit_time': array([0.62150097, 0.61969781, 0.599401  ]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.05966187, 3.52218199, 3.23168516]), 'fit_time': array([2.13867617, 2.46561694, 2.25944185]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.29701805, 31.3113358 , 31.89502406]), 'fit_time': array([28.52332306, 28.43428516, 31.32969999]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.9669919 , 31.96407104, 31.91745305]), 'fit_time': array([29.21945   , 29.09863806, 29.55477095]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.56571698, 0.57949185, 0.57923889]), 'fit_time': array([0.56791806, 0.56905603, 0.56556797]), 'test_precision': array([0.47368421, 0.4       , 0.7       ]), 'test_f1': array([0.48648649, 0.2962963 , 0.51851852]), 'test_recall': array([0.5       , 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79295993, 0.79189205, 0.73874903]), 'fit_time': array([0.62194896, 0.62147498, 0.60007691]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06363606, 3.52403593, 3.23333001]), 'fit_time': array([2.14777994, 2.47149014, 2.26028109]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.36056209, 31.44397187, 31.29467797]), 'fit_time': array([28.450876, 28.51018 , 31.301512]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.96371698, 31.91694593, 31.96925688]), 'fit_time': array([29.267349  , 28.81233287, 29.59457898]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.57376981, 0.581074  , 0.56556702]), 'fit_time': array([0.56163406, 0.57099009, 0.55815911]), 'test_precision': array([0.45      , 0.375     , 0.63636364]), 'test_f1': array([0.47368421, 0.24      , 0.5       ]), 'test_recall': array([0.5       , 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79030991, 0.79341316, 0.73740196]), 'fit_time': array([0.62583423, 0.61958385, 0.60788298]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06600308, 3.52351594, 3.42237902]), 'fit_time': array([2.13645506, 2.47135401, 2.26475191]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.29660106, 31.296978  , 31.28597403]), 'fit_time': array([28.47508287, 28.43201017, 31.35701203]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([31.986727  , 31.92645907, 31.94007492]), 'fit_time': array([29.19650388, 28.81442213, 29.60785389]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54922605, 0.57413793, 0.54072595]), 'fit_time': array([0.56421113, 0.57185602, 0.54479909]), 'test_precision': array([0.47368421, 0.3       , 0.58333333]), 'test_f1': array([0.48648649, 0.22222222, 0.48275862]), 'test_recall': array([0.5       , 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79573798, 0.79171515, 0.73776698]), 'fit_time': array([0.62193108, 0.61951804, 0.59962296]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.05907679, 3.52288294, 3.23260593]), 'fit_time': array([2.14364505, 2.46647501, 2.26171803]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.64865494, 31.31327391, 31.30158186]), 'fit_time': array([28.41512609, 28.5127151 , 31.28262401]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.01498604, 31.93160105, 31.95069289]), 'fit_time': array([29.27003098, 28.82070208, 29.62823892]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.5611279 , 0.59281182, 0.53012896]), 'fit_time': array([0.55944109, 0.564641  , 0.53258014]), 'test_precision': array([0.45      , 0.3       , 0.58333333]), 'test_f1': array([0.47368421, 0.22222222, 0.48275862]), 'test_recall': array([0.5       , 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79626298, 0.79093814, 0.73795915]), 'fit_time': array([0.62082791, 0.61960983, 0.60005498]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06414914, 3.72627497, 3.23285913]), 'fit_time': array([2.13719893, 2.48482299, 2.26153493]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.31106496, 31.28901219, 31.28608203]), 'fit_time': array([28.45825911, 28.47360396, 31.37038302]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.00565791, 31.8914268 , 32.28762412]), 'fit_time': array([29.1876719 , 28.82155299, 29.56685901]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.55279398, 0.60355997, 0.53238297]), 'fit_time': array([0.56092286, 0.56118512, 0.525949  ]), 'test_precision': array([0.42857143, 0.22222222, 0.54545455]), 'test_f1': array([0.46153846, 0.15384615, 0.42857143]), 'test_recall': array([0.5       , 0.11764706, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79225397, 0.79186797, 0.73863292]), 'fit_time': array([0.62220502, 0.62059999, 0.60050511]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06199813, 3.52328014, 3.23446202]), 'fit_time': array([2.14622998, 2.46910286, 2.26627803]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.30025101, 31.28163099, 31.30497098]), 'fit_time': array([28.44204521, 28.52205586, 31.27579689]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.05560803, 32.24942112, 31.9223361 ]), 'fit_time': array([29.26119399, 28.77442884, 29.59133577]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54870701, 0.58095384, 0.53478479]), 'fit_time': array([0.54964805, 0.56350112, 0.52828217]), 'test_precision': array([0.42857143, 0.4       , 0.54545455]), 'test_f1': array([0.46153846, 0.2962963 , 0.42857143]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79235482, 0.7953279 , 0.73857617]), 'fit_time': array([0.62154698, 0.61936903, 0.60110092]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.062675  , 3.52361798, 3.23800707]), 'fit_time': array([2.14152813, 2.46863389, 2.26416111]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.3096559 , 31.26951599, 31.30596709]), 'fit_time': array([28.41774893, 28.49934697, 31.36874795]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.26517391, 31.93731999, 31.8824861 ]), 'fit_time': array([29.27010489, 28.83085608, 29.56873298]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54600787, 0.57849813, 0.5350101 ]), 'fit_time': array([0.56057501, 0.56142187, 0.52867293]), 'test_precision': array([0.42857143, 0.4       , 0.54545455]), 'test_f1': array([0.46153846, 0.2962963 , 0.42857143]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79171896, 0.79092693, 0.73823404]), 'fit_time': array([0.62225199, 0.62167907, 0.60068798]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06050801, 3.52252221, 3.232831  ]), 'fit_time': array([2.14877892, 2.46804094, 2.26314783]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.28070402, 31.30036187, 31.2945931 ]), 'fit_time': array([28.44885087, 28.46574712, 31.31883693]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.25370002, 31.91184306, 31.90209913]), 'fit_time': array([29.33636498, 28.75060701, 29.60227084]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54796386, 0.58105683, 0.53705907]), 'fit_time': array([0.55032611, 0.56018305, 0.52820992]), 'test_precision': array([0.42857143, 0.4       , 0.54545455]), 'test_f1': array([0.46153846, 0.2962963 , 0.42857143]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.792696  , 0.79130101, 0.74205804]), 'fit_time': array([0.62101603, 0.61928296, 0.59954906]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06200409, 3.52406812, 3.23508692]), 'fit_time': array([2.13692188, 2.46556687, 2.2774179 ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.30198789, 31.31138015, 31.28982186]), 'fit_time': array([28.42888808, 28.46980691, 31.32971597]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.29109693, 31.90681696, 31.92668891]), 'fit_time': array([29.23338604, 28.85499692, 29.54931307]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54802299, 0.57926297, 0.53814101]), 'fit_time': array([0.55501413, 0.56066418, 0.52850199]), 'test_precision': array([0.42857143, 0.4       , 0.54545455]), 'test_f1': array([0.46153846, 0.2962963 , 0.42857143]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79386306, 0.7898519 , 0.73822594]), 'fit_time': array([0.62879586, 0.62126207, 0.59968686]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.0624671 , 3.52335286, 3.2323761 ]), 'fit_time': array([2.14512587, 2.47034311, 2.26217103]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.35972691, 31.32652402, 31.29943705]), 'fit_time': array([28.45247221, 28.48492789, 31.3217051 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.29661393, 31.9430511 , 31.90030122]), 'fit_time': array([29.27186704, 28.79776287, 29.61708379]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([0.54562712, 0.58017206, 0.54097891]), 'fit_time': array([0.55135298, 0.56168413, 0.52872801]), 'test_precision': array([0.42857143, 0.4       , 0.54545455]), 'test_f1': array([0.46153846, 0.2962963 , 0.42857143]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([0.79197598, 0.79025793, 0.73878503]), 'fit_time': array([0.62195611, 0.62012506, 0.60024714]), 'test_precision': array([0.71428571, 0.66666667, 0.7       ]), 'test_f1': array([0.625     , 0.2       , 0.51851852]), 'test_recall': array([0.55555556, 0.11764706, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([3.06489301, 3.52431512, 3.23186207]), 'fit_time': array([2.13903189, 2.46690583, 2.26980996]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([31.28195715, 31.39101601, 31.28086901]), 'fit_time': array([28.45637679, 28.47500896, 31.33635402]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([32.27161407, 31.87953901, 31.90595007]), 'fit_time': array([29.21250105, 28.85928297, 29.54912996]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([1.21331406, 1.26257205, 1.17058015]), 'fit_time': array([0.87456799, 0.90144897, 0.83613896]), 'test_precision': array([1. , 1. , 0.8]), 'test_f1': array([0.56      , 0.11111111, 0.36363636]), 'test_recall': array([0.38888889, 0.05882353, 0.23529412])})
('CV for PCA', 512)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.15099287, 1.09702492, 1.05564785]), 'fit_time': array([1.01385903, 0.93363905, 0.88003111]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.47297311, 1.39751601, 1.26277184]), 'fit_time': array([1.13640809, 1.08679891, 0.98118401]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.63045883, 8.14212179, 7.905545  ]), 'fit_time': array([5.57941318, 5.94974804, 5.75995493]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([68.68063498, 69.14477396, 64.61782408]), 'fit_time': array([56.33092213, 59.40786099, 60.27360797]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.12621689, 65.03943396, 65.18158698]), 'fit_time': array([55.14088011, 56.53268695, 56.92001891]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.20787311, 1.105196  , 1.06274796]), 'fit_time': array([1.0220499 , 0.97128105, 0.92445087]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.49676514, 1.43555403, 1.30562091]), 'fit_time': array([1.19562602, 1.14980507, 1.05732393]), 'test_precision': array([1.        , 0.66666667, 0.83333333]), 'test_f1': array([0.61538462, 0.2       , 0.43478261]), 'test_recall': array([0.44444444, 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84381914, 8.37495017, 8.15835404]), 'fit_time': array([5.7407949 , 6.11403894, 5.94808507]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.64277911, 64.57965994, 64.662359  ]), 'fit_time': array([56.49282002, 56.57427001, 62.19220901]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.17686796, 65.14296389, 65.17308784]), 'fit_time': array([58.49720097, 56.57280707, 58.61108112]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.2045908 , 1.10535502, 1.06483197]), 'fit_time': array([1.0590241 , 0.99299502, 0.94005013]), 'test_precision': array([0., 0., 1.]), 'test_f1': array([0. , 0. , 0.3]), 'test_recall': array([0.        , 0.        , 0.17647059])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.65944791, 1.68498302, 1.53424001]), 'fit_time': array([1.27934289, 1.33844185, 1.24015284]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84369683, 8.37525702, 8.1606009 ]), 'fit_time': array([5.74597216, 6.11775899, 5.96821213]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.55321622, 64.58175611, 65.01818585]), 'fit_time': array([56.47372699, 56.56008101, 62.62312508]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.12763   , 65.12941504, 65.02927303]), 'fit_time': array([58.15649199, 56.6999321 , 58.68076706]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.18106699, 1.16688895, 1.11279583]), 'fit_time': array([1.12027192, 1.09667611, 1.01804113]), 'test_precision': array([1. , 0.8, 1. ]), 'test_f1': array([0.61538462, 0.36363636, 0.45454545]), 'test_recall': array([0.44444444, 0.23529412, 0.29411765])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66506696, 1.68323708, 1.53479886]), 'fit_time': array([1.28035307, 1.3416791 , 1.24032807]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84252501, 8.37371993, 8.15497112]), 'fit_time': array([5.75526214, 6.14761996, 5.95255184]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([65.07032013, 64.656003  , 64.60318398]), 'fit_time': array([56.5260849 , 57.10273194, 62.40457106]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.15080214, 65.22163391, 65.064991  ]), 'fit_time': array([58.1379869 , 56.84230208, 58.83979917]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.18076801, 1.12319613, 1.15977407]), 'fit_time': array([1.11657882, 1.06451797, 1.05138898]), 'test_precision': array([0.81818182, 0.8       , 1.        ]), 'test_f1': array([0.62068966, 0.36363636, 0.52173913]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66516209, 1.68402791, 1.53730416]), 'fit_time': array([1.28340197, 1.3453021 , 1.24612188]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84363389, 8.37412095, 8.156214  ]), 'fit_time': array([5.77564597, 6.14253616, 5.97475696]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.71778989, 64.54955006, 64.66509199]), 'fit_time': array([57.17101312, 56.72803688, 62.36499906]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.21600509, 65.12500119, 65.23552704]), 'fit_time': array([58.20818686, 56.81574702, 58.82731485]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.26873994, 1.17532611, 1.18261003]), 'fit_time': array([1.163939  , 1.10528898, 1.07433105]), 'test_precision': array([0.83333333, 0.71428571, 0.75      ]), 'test_f1': array([0.66666667, 0.41666667, 0.48      ]), 'test_recall': array([0.55555556, 0.29411765, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66457391, 1.68376207, 1.53106403]), 'fit_time': array([1.28180289, 1.34517598, 1.24356103]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84577584, 8.37399197, 8.1563921 ]), 'fit_time': array([5.77281404, 6.13727307, 5.96563697]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.56374884, 64.63159299, 64.85602403]), 'fit_time': array([56.55604815, 56.74315906, 62.41236401]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.221246  , 65.24226093, 65.08776689]), 'fit_time': array([58.20040393, 56.82873988, 58.91932416]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.22496891, 1.23132586, 1.19469404]), 'fit_time': array([1.1376431 , 1.15426016, 1.10108995]), 'test_precision': array([0.66666667, 0.57142857, 0.77777778]), 'test_f1': array([0.60606061, 0.33333333, 0.53846154]), 'test_recall': array([0.55555556, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.6649909 , 1.92569494, 1.53414607]), 'fit_time': array([1.278826  , 1.34717298, 1.28011608]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.8484571 , 8.37417698, 8.15641117]), 'fit_time': array([5.72387695, 6.12979507, 5.97116184]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.69547105, 64.52516389, 64.5594039 ]), 'fit_time': array([56.57050896, 56.72248602, 62.30752802]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.20077491, 65.07830787, 65.22192693]), 'fit_time': array([58.29725695, 56.74012709, 58.97698808]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.24503994, 1.23128605, 1.21781492]), 'fit_time': array([1.15942192, 1.18710208, 1.09868002]), 'test_precision': array([0.6875    , 0.57142857, 0.77777778]), 'test_f1': array([0.64705882, 0.33333333, 0.53846154]), 'test_recall': array([0.61111111, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.665869  , 1.68236899, 1.53372884]), 'fit_time': array([1.28066206, 1.34427404, 1.24373198]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84698319, 8.37432003, 8.15601993]), 'fit_time': array([5.73534799, 6.14065003, 5.97054505]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.53855991, 64.6547029 , 64.59429407]), 'fit_time': array([56.54006815, 56.61248517, 62.40865898]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.07880497, 65.2771461 , 65.10891795]), 'fit_time': array([58.31436491, 56.80943394, 58.98450613]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.26111007, 1.22018194, 1.26682496]), 'fit_time': array([1.17100191, 1.16782808, 1.11740422]), 'test_precision': array([0.64705882, 0.57142857, 0.77777778]), 'test_f1': array([0.62857143, 0.33333333, 0.53846154]), 'test_recall': array([0.61111111, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66741204, 1.68222904, 1.53362703]), 'fit_time': array([1.27876687, 1.34026384, 1.24055791]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84290695, 8.37656903, 8.15480018]), 'fit_time': array([5.71194005, 6.536412  , 5.95650387]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.71409988, 64.56888199, 64.55254698]), 'fit_time': array([56.54647207, 56.77588701, 62.39348912]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.19680309, 65.1087079 , 65.25131416]), 'fit_time': array([58.24079895, 56.8803041 , 58.80022478]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.25223613, 1.23122501, 1.27085996]), 'fit_time': array([1.16944289, 1.19116902, 1.14181089]), 'test_precision': array([0.625     , 0.57142857, 0.77777778]), 'test_f1': array([0.58823529, 0.33333333, 0.53846154]), 'test_recall': array([0.55555556, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66751599, 1.68309212, 1.533777  ]), 'fit_time': array([1.2832911 , 1.34297109, 1.24271202]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84353399, 8.379282  , 8.15692401]), 'fit_time': array([5.74814391, 6.13801503, 5.97686195]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.62618303, 64.58963799, 64.619555  ]), 'fit_time': array([56.531708  , 56.65292001, 62.4912138 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.17938185, 65.14646602, 65.21839285]), 'fit_time': array([58.25001407, 56.85811615, 58.85286617]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.22182608, 1.25183892, 1.2598381 ]), 'fit_time': array([1.137321  , 1.22601604, 1.13839102]), 'test_precision': array([0.58823529, 0.57142857, 0.875     ]), 'test_f1': array([0.57142857, 0.33333333, 0.56      ]), 'test_recall': array([0.55555556, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66511512, 1.683676  , 1.53334785]), 'fit_time': array([1.28182793, 1.34177017, 1.24134898]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84328389, 8.37471199, 8.15846205]), 'fit_time': array([5.72361612, 6.13699698, 5.96295285]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.66376495, 64.81410789, 64.70200706]), 'fit_time': array([56.82909083, 56.739923  , 62.47875786]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.40334201, 65.25567198, 65.19659781]), 'fit_time': array([58.01987505, 56.83434796, 58.65401196]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.22568083, 1.2726059 , 1.26580501]), 'fit_time': array([1.15009117, 1.202847  , 1.14047098]), 'test_precision': array([0.55555556, 0.57142857, 0.875     ]), 'test_f1': array([0.55555556, 0.33333333, 0.56      ]), 'test_recall': array([0.55555556, 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66422606, 1.68690205, 1.53350687]), 'fit_time': array([1.27902603, 1.34599495, 1.24416995]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84397697, 8.37567496, 8.16183591]), 'fit_time': array([5.72944593, 6.1338551 , 5.97267795]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.75885606, 64.63304901, 64.83672404]), 'fit_time': array([56.50889587, 56.70582104, 62.3011179 ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.28243303, 65.22745585, 65.38302588]), 'fit_time': array([58.25734687, 56.64416814, 58.78378606]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19311309, 1.28946304, 1.23292708]), 'fit_time': array([1.14312005, 1.20219994, 1.13943791]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66454101, 1.68241   , 1.53490686]), 'fit_time': array([1.28087401, 1.34205699, 1.24079323]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84491992, 8.37638092, 8.1578021 ]), 'fit_time': array([5.72420907, 6.14015293, 5.96291995]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.58443308, 64.74934387, 64.70489311]), 'fit_time': array([56.43723011, 56.71321917, 62.35446978]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.20338488, 65.33642197, 65.32055283]), 'fit_time': array([58.50517011, 56.6719408 , 58.72746015]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19281602, 1.28530884, 1.23306012]), 'fit_time': array([1.14193106, 1.19421721, 1.13846993]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66444302, 1.68253803, 1.53697991]), 'fit_time': array([1.279356  , 1.34369993, 1.23827505]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84372211, 8.37436199, 8.15690589]), 'fit_time': array([5.71338391, 6.11607385, 5.94586492]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.76666594, 64.62778497, 64.67744184]), 'fit_time': array([56.39255691, 56.77053905, 62.27361417]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.45913506, 65.33180213, 65.16647792]), 'fit_time': array([58.22984886, 56.70460105, 58.67936611]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19244695, 1.27839708, 1.23568797]), 'fit_time': array([1.14054704, 1.193295  , 1.13557601]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66390705, 1.68304706, 1.53363299]), 'fit_time': array([1.27591205, 1.33839488, 1.24208593]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84797502, 8.37493491, 8.15726686]), 'fit_time': array([5.7376442 , 6.12718892, 5.96262312]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.7459321 , 64.65739393, 64.76498508]), 'fit_time': array([56.56198192, 56.670434  , 62.37420297]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.27767491, 65.25084591, 65.31701708]), 'fit_time': array([58.24740887, 56.61902905, 58.67613506]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19277406, 1.27719498, 1.23821092]), 'fit_time': array([1.14422202, 1.19488192, 1.13655305]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66443586, 1.68262315, 1.53302479]), 'fit_time': array([1.27754617, 1.34094501, 1.24013519]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84761405, 8.37391019, 8.16601706]), 'fit_time': array([5.72090387, 6.13364792, 5.956599  ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.8081069 , 64.79047704, 64.72954488]), 'fit_time': array([57.13253713, 56.59797406, 62.51902509]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.16908693, 65.40823293, 65.28243399]), 'fit_time': array([58.1192441 , 56.51929402, 58.76198316]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19270015, 1.27857614, 1.23406911]), 'fit_time': array([1.14158797, 1.19616795, 1.138134  ]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.6723249 , 1.68298507, 1.5341599 ]), 'fit_time': array([1.27874398, 1.35952091, 1.24170613]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84727597, 8.37514114, 8.15643287]), 'fit_time': array([5.727911  , 6.12575388, 5.95779705]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.68556714, 64.79302311, 64.68996286]), 'fit_time': array([56.52491283, 56.57399297, 62.51574492]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.17687702, 65.43417692, 65.39860201]), 'fit_time': array([58.11891007, 56.55344009, 58.75418401]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19413018, 1.2775681 , 1.23429108]), 'fit_time': array([1.16154385, 1.19733405, 1.13824081]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66593885, 1.68191981, 1.53321099]), 'fit_time': array([1.27868819, 1.34276915, 1.23983002]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84389687, 8.37590909, 8.15580702]), 'fit_time': array([5.72219396, 6.12406588, 5.95231795]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.73383403, 64.71035504, 64.65814805]), 'fit_time': array([56.48874998, 56.82405305, 62.355093  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.77015805, 65.32913303, 65.25746799]), 'fit_time': array([58.03917599, 56.69098616, 58.81026411]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19379807, 1.28243113, 1.23407102]), 'fit_time': array([1.15179896, 1.19390297, 1.13648796]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.667974  , 1.68271708, 1.53286505]), 'fit_time': array([1.27761793, 1.34370899, 1.24373889]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84407282, 8.37995505, 8.15602708]), 'fit_time': array([5.71183109, 6.11058092, 5.94403005]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.72788715, 65.17170095, 64.72139001]), 'fit_time': array([56.40792203, 56.8661871 , 62.29408002]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.32837892, 65.34682107, 65.1318028 ]), 'fit_time': array([58.02397895, 56.69199395, 59.45562315]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.1965301 , 1.28151298, 1.2335279 ]), 'fit_time': array([1.15398383, 1.196697  , 1.13866091]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66511703, 1.68492103, 1.53256106]), 'fit_time': array([1.27919006, 1.3420198 , 1.23969102]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84494519, 8.37670898, 8.1584959 ]), 'fit_time': array([5.725492  , 6.12146902, 5.95797515]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.71665382, 64.64159203, 64.5399909 ]), 'fit_time': array([56.43874216, 56.93262601, 62.39077711]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.257833  , 65.34333396, 65.07572484]), 'fit_time': array([58.11489296, 56.76445484, 58.86815   ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([1.19658208, 1.27690792, 1.23049808]), 'fit_time': array([1.14197898, 1.19617486, 1.14061689]), 'test_precision': array([0.55555556, 0.55555556, 0.77777778]), 'test_f1': array([0.55555556, 0.38461538, 0.53846154]), 'test_recall': array([0.55555556, 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([1.66177297, 1.68521619, 1.532619  ]), 'fit_time': array([1.27965617, 1.34008503, 1.23940492]), 'test_precision': array([0.91666667, 0.75      , 0.77777778]), 'test_f1': array([0.73333333, 0.28571429, 0.53846154]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([7.84305501, 8.37477303, 8.15686917]), 'fit_time': array([5.71201515, 6.11663508, 5.94843698]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([64.73905802, 64.66604614, 64.53418207]), 'fit_time': array([57.21518707, 56.81893587, 62.32733202]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([65.27214408, 65.19115186, 65.09939194]), 'fit_time': array([58.22109604, 56.78969502, 58.76445889]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([1.8956809 , 2.00665808, 1.83328199]), 'fit_time': array([1.4466331 , 1.53775001, 1.40284896]), 'test_precision': array([1.        , 0.75      , 0.83333333]), 'test_f1': array([0.61538462, 0.28571429, 0.43478261]), 'test_recall': array([0.44444444, 0.17647059, 0.29411765])})
('CV for PCA', 1024)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.2768209 , 2.19731522, 2.10324907]), 'fit_time': array([1.88320518, 1.86763191, 1.75355387]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.0325098 , 2.81942892, 2.67410398]), 'fit_time': array([2.32558417, 2.23764515, 2.06367111]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([17.22486115, 18.59348202, 17.73000002]), 'fit_time': array([12.65243387, 13.67046404, 12.99006796]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.69175291, 124.67674494, 124.65873313]), 'fit_time': array([110.10719013, 116.57087016, 117.57537484]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.43396688, 125.53843999, 125.2991941 ]), 'fit_time': array([108.00960612, 113.70232916, 111.28127694]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.38188004, 2.24831915, 2.14435005]), 'fit_time': array([2.06706285, 1.91545177, 1.80545592]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.17498207, 3.08245611, 2.884794  ]), 'fit_time': array([2.45638299, 2.46356797, 2.261518  ]), 'test_precision': array([1.        , 0.75      , 0.83333333]), 'test_f1': array([0.61538462, 0.28571429, 0.43478261]), 'test_recall': array([0.44444444, 0.17647059, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.0204258 , 19.00301981, 18.35218096]), 'fit_time': array([13.21437407, 13.93350911, 13.46525502]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.46123695, 124.54803014, 124.52977109]), 'fit_time': array([110.67523217, 110.86892605, 121.76417494]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.32000279, 125.2744658 , 125.36152101]), 'fit_time': array([113.77097821, 106.64378119, 114.79021311]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.38171005, 2.22181106, 2.15563607]), 'fit_time': array([2.06934905, 1.92906904, 1.91338205]), 'test_precision': array([0., 1., 1.]), 'test_f1': array([0.        , 0.11111111, 0.38095238]), 'test_recall': array([0.        , 0.05882353, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44246697, 3.43847203, 3.17382312]), 'fit_time': array([2.63098001, 2.70339417, 2.47578502]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02199602, 18.99985909, 18.62221789]), 'fit_time': array([13.22505999, 13.959234  , 13.45519805]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.50321007, 124.47786498, 124.50069904]), 'fit_time': array([110.59458089, 110.98892713, 122.02501893]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.28938818, 125.40451217, 125.42502308]), 'fit_time': array([113.75508785, 106.78569698, 114.96555901]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.47209096, 2.38134503, 2.22136283]), 'fit_time': array([2.15676594, 2.11522293, 1.97031307]), 'test_precision': array([0.9, 0.8, 1. ]), 'test_f1': array([0.64285714, 0.36363636, 0.52173913]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44066715, 3.43601108, 3.17469788]), 'fit_time': array([2.62937784, 2.70731497, 2.47739911]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02314496, 19.01777816, 18.35831499]), 'fit_time': array([13.22529101, 13.92539477, 13.47942495]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([125.02929807, 124.75192595, 124.55295706]), 'fit_time': array([110.5461719 , 110.89041996, 121.84355283]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.43224883, 125.31658196, 125.2560091 ]), 'fit_time': array([113.78928208, 106.59798789, 114.84024477]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.66822505, 2.32808805, 2.36637998]), 'fit_time': array([2.28789997, 2.08914685, 2.13110614]), 'test_precision': array([0.83333333, 0.83333333, 1.        ]), 'test_f1': array([0.66666667, 0.43478261, 0.52173913]), 'test_recall': array([0.55555556, 0.29411765, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44449401, 3.43969703, 3.173913  ]), 'fit_time': array([2.62804294, 2.70230079, 2.47652006]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.01425886, 19.01856208, 18.35409307]), 'fit_time': array([13.21012712, 13.93100905, 13.47337103]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.58421302, 124.55265999, 124.58265805]), 'fit_time': array([110.58885217, 111.04794192, 122.02754188]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.32705402, 125.29437613, 126.07091498]), 'fit_time': array([114.00022793, 106.77227092, 114.92138696]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.65611005, 2.43108487, 2.48407888]), 'fit_time': array([2.31698799, 2.23907495, 2.26587105]), 'test_precision': array([0.83333333, 0.75      , 1.        ]), 'test_f1': array([0.66666667, 0.48      , 0.52173913]), 'test_recall': array([0.55555556, 0.35294118, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.43589497, 3.44267297, 3.17371798]), 'fit_time': array([2.62722611, 2.70904708, 2.48334694]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.01774502, 19.00333881, 18.36889005]), 'fit_time': array([13.25061393, 13.92320204, 13.49389982]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.5311141 , 124.59673619, 124.62462997]), 'fit_time': array([110.6675899 , 111.01195884, 121.85296798]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.32475615, 125.39503312, 126.53132081]), 'fit_time': array([113.76302791, 106.62436986, 114.82808805]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.64436793, 2.63395214, 2.57575607]), 'fit_time': array([2.30007815, 2.35038686, 2.29169583]), 'test_precision': array([0.78571429, 0.66666667, 0.875     ]), 'test_f1': array([0.6875    , 0.46153846, 0.56      ]), 'test_recall': array([0.61111111, 0.35294118, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44058704, 3.43835998, 3.17406297]), 'fit_time': array([2.62888503, 2.70323205, 2.47626281]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.01745701, 19.00917006, 18.35139799]), 'fit_time': array([13.22734094, 13.94487596, 13.46145892]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.55660987, 124.50473595, 124.54613686]), 'fit_time': array([110.57605004, 111.06033397, 122.01095605]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.44405985, 125.33212399, 125.31403708]), 'fit_time': array([113.73827815, 106.76511097, 114.99472499]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68066788, 2.63807297, 2.55758476]), 'fit_time': array([2.35824203, 2.34546685, 2.31401706]), 'test_precision': array([0.76923077, 0.66666667, 0.875     ]), 'test_f1': array([0.64516129, 0.46153846, 0.56      ]), 'test_recall': array([0.55555556, 0.35294118, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.43993402, 3.44043994, 3.17734098]), 'fit_time': array([2.64858198, 2.70874786, 2.47951603]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02057314, 19.01510096, 18.35562801]), 'fit_time': array([13.23429489, 13.934582  , 13.48611593]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.48185992, 124.45588994, 125.13058496]), 'fit_time': array([110.58507609, 111.18819904, 121.80658293]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.21363783, 125.37958884, 125.3893981 ]), 'fit_time': array([113.78559804, 106.64185214, 114.78076506]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.64121103, 2.63465309, 2.50262308]), 'fit_time': array([2.32409382, 2.34903908, 2.22571611]), 'test_precision': array([0.76923077, 0.66666667, 0.875     ]), 'test_f1': array([0.64516129, 0.46153846, 0.56      ]), 'test_recall': array([0.55555556, 0.35294118, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44046903, 3.44053602, 3.17510796]), 'fit_time': array([2.62667704, 2.7018981 , 2.47592306]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02208209, 18.9994688 , 18.35314894]), 'fit_time': array([13.20712996, 13.94515014, 13.44221687]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.52244902, 124.60696387, 126.44556117]), 'fit_time': array([110.66819215, 111.1507771 , 121.98809981]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([126.16010308, 125.89661288, 125.69369698]), 'fit_time': array([113.94353485, 107.34454918, 115.65022302]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.66901398, 2.61908889, 2.50334883]), 'fit_time': array([2.33683395, 2.3986361 , 2.26176214]), 'test_precision': array([0.71428571, 0.7       , 0.875     ]), 'test_f1': array([0.625     , 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44488692, 3.44413495, 3.17451   ]), 'fit_time': array([2.644099  , 2.72399998, 2.49412298]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.06028795, 19.04378414, 18.37764096]), 'fit_time': array([13.27472687, 14.04664898, 13.56012797]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([125.093786  , 125.01732612, 125.09991598]), 'fit_time': array([111.25604987, 111.65736485, 122.56456995]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.96044397, 125.91256905, 125.79332995]), 'fit_time': array([114.37698102, 107.19855714, 115.33185101]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68684506, 2.61914706, 2.5259428 ]), 'fit_time': array([2.35884285, 2.38273787, 2.2482152 ]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44351816, 3.44362402, 3.17405391]), 'fit_time': array([2.64275599, 2.721946  , 2.49018598]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.044523  , 19.03526092, 18.37482095]), 'fit_time': array([13.27897096, 14.06124902, 13.54903197]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([125.04821801, 125.09988117, 125.09021187]), 'fit_time': array([111.9023571 , 111.72030282, 122.78585601]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.91090584, 125.78030896, 125.91221404]), 'fit_time': array([114.32138014, 107.39415312, 115.72129893]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68692803, 2.61890578, 2.52666306]), 'fit_time': array([2.36489487, 2.39326215, 2.2501471 ]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44817114, 3.44355106, 3.1747191 ]), 'fit_time': array([2.6432209 , 2.72219515, 2.49158597]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.03329301, 19.02860403, 18.37995005]), 'fit_time': array([13.28929305, 13.99746299, 13.61654305]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([125.03193712, 125.07285309, 125.16858196]), 'fit_time': array([111.28708386, 111.55008602, 123.18694091]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.790905  , 125.87192392, 125.86315012]), 'fit_time': array([114.49706316, 107.27382112, 115.4653039 ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68191719, 2.62459087, 2.52635813]), 'fit_time': array([2.36053991, 2.38281703, 2.25114608]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44855595, 3.4395051 , 3.17765307]), 'fit_time': array([2.64373398, 2.72899485, 2.49746394]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.04052305, 19.03430796, 18.36905503]), 'fit_time': array([13.31175399, 14.04416609, 13.53963399]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([125.14308   , 124.98077202, 125.14595795]), 'fit_time': array([113.77076197, 111.77695298, 122.77727914]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([126.02570009, 125.32347417, 125.21164894]), 'fit_time': array([114.39979601, 107.77707791, 115.08571291]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68822789, 2.61563301, 2.52309203]), 'fit_time': array([2.3583622 , 2.3737731 , 2.23699594]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44231796, 3.43933511, 3.17405605]), 'fit_time': array([2.62712598, 2.70657611, 2.47685504]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02529287, 19.01640987, 18.36137819]), 'fit_time': array([13.21168113, 13.95314813, 13.50735188]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.40912294, 124.51133513, 124.50882483]), 'fit_time': array([110.59797001, 110.85685992, 121.85142303]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.25722098, 125.34786296, 125.27702713]), 'fit_time': array([113.82789302, 106.62811399, 114.80822992]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68789196, 2.61622405, 2.52332115]), 'fit_time': array([2.33959818, 2.39017797, 2.23733497]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44009995, 3.43943596, 3.17381287]), 'fit_time': array([2.62999392, 2.70367217, 2.47661209]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.0212872 , 19.01694107, 18.36338902]), 'fit_time': array([13.2414248 , 13.96530795, 13.47578001]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.50243807, 124.46661091, 124.50834513]), 'fit_time': array([110.58777881, 111.64499903, 122.02413487]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.28449082, 125.33648586, 125.33596706]), 'fit_time': array([113.78144312, 106.77446604, 114.97180295]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68013   , 2.62145996, 2.52859998]), 'fit_time': array([2.34616804, 2.37597895, 2.23855901]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44037199, 3.43987393, 3.17173004]), 'fit_time': array([2.62728405, 2.70718813, 2.48087192]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.01866913, 19.00725508, 18.35416508]), 'fit_time': array([13.24725699, 13.93507695, 13.46645594]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.51974797, 124.44736409, 124.45846081]), 'fit_time': array([110.59790993, 110.95565891, 121.90444613]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.34278321, 125.88214207, 125.35889888]), 'fit_time': array([113.74583197, 106.67579293, 114.86299109]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68495083, 2.6194911 , 2.52342701]), 'fit_time': array([2.35879707, 2.36942792, 2.23689604]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44035006, 3.43960404, 3.17486501]), 'fit_time': array([2.62906909, 2.70338988, 2.47600007]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.01899791, 19.00788999, 18.35225511]), 'fit_time': array([13.22283006, 13.94622397, 13.45856786]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.60001493, 124.49376988, 124.55207896]), 'fit_time': array([110.5631969 , 111.05717802, 122.02678585]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.2752502 , 125.33427787, 125.25725794]), 'fit_time': array([113.80479598, 106.85517311, 114.955549  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68509007, 2.61615586, 2.52406478]), 'fit_time': array([2.34776807, 2.37474012, 2.24060607]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44086099, 3.43949103, 3.17127395]), 'fit_time': array([2.64924002, 2.71546388, 2.47918797]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02516294, 19.01855803, 18.36433697]), 'fit_time': array([13.24228597, 13.94361997, 13.48548889]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.38292599, 124.5589819 , 124.46066594]), 'fit_time': array([110.71197295, 111.74966598, 123.13294816]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.23888898, 125.34377289, 125.30543303]), 'fit_time': array([113.80499411, 106.57363915, 114.77773499]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68580413, 2.61829901, 2.52936792]), 'fit_time': array([2.33343387, 2.367764  , 2.23516202]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44056988, 3.43631387, 3.8772521 ]), 'fit_time': array([2.62586212, 2.70187902, 2.47450495]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.02626014, 19.00382495, 18.36073208]), 'fit_time': array([17.30741596, 13.93554497, 13.47127199]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.65319395, 124.54572988, 124.47353792]), 'fit_time': array([110.7433269 , 111.27478099, 122.11468101]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.41388607, 125.33818388, 125.38205504]), 'fit_time': array([113.7908659 , 106.88000822, 115.070508  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.6822021 , 2.61855888, 2.52374887]), 'fit_time': array([2.33743   , 2.37818503, 2.24216819]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44047904, 3.44107699, 3.17441607]), 'fit_time': array([2.62975883, 2.70971489, 2.48056793]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.03630304, 19.02672386, 18.35258698]), 'fit_time': array([13.2039361 , 13.96501613, 13.47880006]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.55829906, 124.65437102, 124.60844707]), 'fit_time': array([110.627985  , 111.46128392, 121.859761  ]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.37659407, 125.26906681, 125.55904412]), 'fit_time': array([113.74152589, 106.56067801, 114.63219595]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([2.68207121, 2.61805296, 2.52292705]), 'fit_time': array([2.34823489, 2.37185788, 2.23735094]), 'test_precision': array([0.76923077, 0.7       , 0.875     ]), 'test_f1': array([0.64516129, 0.51851852, 0.56      ]), 'test_recall': array([0.55555556, 0.41176471, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([3.44401693, 3.435673  , 3.17328   ]), 'fit_time': array([2.63264298, 2.70403194, 2.47825909]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.71428571, 0.28571429, 0.56      ]), 'test_recall': array([0.55555556, 0.17647059, 0.41176471])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([18.01987314, 19.0084939 , 18.34878206]), 'fit_time': array([13.23041391, 13.97133708, 13.46174288]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([124.43319011, 124.50165701, 124.40938401]), 'fit_time': array([110.69787097, 111.03254509, 122.13387299]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([125.4290359 , 125.34748411, 125.45495987]), 'fit_time': array([113.85639095, 106.79778695, 114.97440815]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([3.44176817, 3.42605996, 3.13383818]), 'fit_time': array([2.66803193, 2.68789697, 2.44856095]), 'test_precision': array([1.   , 0.75 , 0.875]), 'test_f1': array([0.75862069, 0.28571429, 0.56      ]), 'test_recall': array([0.61111111, 0.17647059, 0.41176471])})
('CV for PCA', 2048)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([4.8306179 , 4.38524294, 4.49218798]), 'fit_time': array([4.318995  , 3.78222799, 3.68611193]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([6.23842597, 5.66498709, 5.47916794]), 'fit_time': array([4.81263804, 4.47899294, 4.26858711]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([38.63603401, 42.17194009, 40.22086787]), 'fit_time': array([27.05589819, 28.86081696, 27.99161792]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([247.77775002, 248.00079918, 247.83660698]), 'fit_time': array([215.62914681, 226.83602691, 229.95704985]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([248.9763279 , 248.8536458 , 248.93854904]), 'fit_time': array([211.10065317, 220.81800008, 216.727175  ]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([4.98853493, 4.56829214, 4.54116297]), 'fit_time': array([4.19882894, 3.7717669 , 3.77269197]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([6.68926215, 6.34820509, 6.05233097]), 'fit_time': array([5.17619205, 4.972893  , 4.69075799]), 'test_precision': array([1.        , 0.66666667, 1.        ]), 'test_f1': array([0.61538462, 0.2       , 0.45454545]), 'test_recall': array([0.44444444, 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.92374492, 43.26607418, 41.85306191]), 'fit_time': array([27.93106103, 29.86929893, 28.96124196]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([247.93086696, 247.82893395, 247.88722301]), 'fit_time': array([216.46629095, 217.17331982, 238.27047396]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([248.90367603, 248.82537603, 248.832654  ]), 'fit_time': array([222.60284805, 208.04686594, 225.53376198]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.03656197, 4.571105  , 4.5663681 ]), 'fit_time': array([4.23174191, 3.94875598, 3.83597994]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.38095238]), 'test_recall': array([0.05555556, 0.05882353, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10480595, 7.18077016, 6.48042703]), 'fit_time': array([5.42056608, 5.55517697, 5.12426615]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.72051191, 43.14655709, 42.04950786]), 'fit_time': array([27.96469712, 29.81227589, 28.97072506]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([247.75531912, 247.83464503, 247.92442703]), 'fit_time': array([216.4502008 , 217.24440694, 238.37056994]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([248.72622705, 248.61971307, 248.85195494]), 'fit_time': array([222.55285692, 208.3913908 , 225.57369685]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.21858811, 4.85361314, 4.67595816]), 'fit_time': array([4.45888901, 4.12310696, 4.06850004]), 'test_precision': array([1. , 0.8, 1. ]), 'test_f1': array([0.61538462, 0.36363636, 0.52173913]), 'test_recall': array([0.44444444, 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.1000669 , 7.17729497, 6.47857594]), 'fit_time': array([5.42891312, 5.55973601, 5.12417006]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.19431901, 42.92817998, 41.34198499]), 'fit_time': array([28.00938511, 29.84426498, 28.90550494]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([247.72639394, 247.84509706, 247.69282198]), 'fit_time': array([216.87182212, 217.07809997, 238.43918896]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([248.99491   , 249.06301022, 256.78236389]), 'fit_time': array([222.59485006, 208.08842087, 224.64415598]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 150)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.42943192, 5.034688  , 4.93314886]), 'fit_time': array([4.78239918, 4.43800998, 4.23035097]), 'test_precision': array([0.83333333, 0.66666667, 1.        ]), 'test_f1': array([0.66666667, 0.34782609, 0.52173913]), 'test_recall': array([0.55555556, 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10231113, 7.17905092, 6.47704005]), 'fit_time': array([5.43819809, 5.56535792, 5.13301516]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.00073099, 42.81832218, 41.307935  ]), 'fit_time': array([28.07675791, 29.90739584, 28.95949006]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([248.65098405, 248.65808988, 249.69153595]), 'fit_time': array([217.46039391, 217.40582514, 240.71768188]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.84184098, 250.88681912, 250.64812779]), 'fit_time': array([224.33473206, 209.67890787, 226.54718518]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 200)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.50946403, 5.25030494, 5.08744407]), 'fit_time': array([4.76942492, 4.58219504, 4.48938107]), 'test_precision': array([0.9       , 0.66666667, 0.85714286]), 'test_f1': array([0.64285714, 0.34782609, 0.5       ]), 'test_recall': array([0.5       , 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10761499, 7.18457103, 6.48171592]), 'fit_time': array([5.46358919, 5.5962069 , 5.16079092]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.32498598, 42.82407093, 41.2025249 ]), 'fit_time': array([28.14874697, 30.04897904, 29.13393211]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.99578691, 249.86749101, 250.00729489]), 'fit_time': array([219.08183217, 218.71191788, 240.28730321]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.90745807, 250.92928195, 250.86329412]), 'fit_time': array([224.47957492, 209.91629195, 226.91157389]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.59017515, 5.58703899, 5.29936981]), 'fit_time': array([4.89962602, 4.82762313, 4.62548113]), 'test_precision': array([0.81818182, 0.6       , 0.85714286]), 'test_f1': array([0.62068966, 0.27272727, 0.5       ]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.11241102, 7.18372107, 6.48093915]), 'fit_time': array([5.46939397, 5.60475183, 5.16553187]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.21456003, 43.21077085, 41.54239607]), 'fit_time': array([28.16421986, 30.06463408, 29.15324903]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.83170605, 250.22241807, 249.85455394]), 'fit_time': array([218.283952  , 219.60624981, 240.78824306]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.92965388, 251.00984597, 250.70774794]), 'fit_time': array([224.69381499, 209.71117592, 227.09946918]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 300)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.45957088, 5.533705  , 5.32714105]), 'fit_time': array([4.76641321, 4.82214999, 4.67141986]), 'test_precision': array([0.81818182, 0.57142857, 0.875     ]), 'test_f1': array([0.62068966, 0.33333333, 0.56      ]), 'test_recall': array([0.5       , 0.23529412, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10985899, 7.1836009 , 6.47871184]), 'fit_time': array([5.47979283, 5.60697293, 5.20312905]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.98021293, 43.15643382, 41.74923801]), 'fit_time': array([28.19334412, 30.0772512 , 29.20737505]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.97784305, 249.93165493, 249.79492116]), 'fit_time': array([218.37080097, 219.08885598, 241.30985999]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.85987115, 250.90451503, 250.90658593]), 'fit_time': array([224.64588404, 210.11622596, 227.06951594]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 350)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.53869581, 5.61089301, 5.24824905]), 'fit_time': array([4.75443697, 4.81534195, 4.57294393]), 'test_precision': array([0.81818182, 0.625     , 0.875     ]), 'test_f1': array([0.62068966, 0.4       , 0.56      ]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10841393, 7.18265295, 6.47846293]), 'fit_time': array([5.47262907, 5.60458088, 5.17019701]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.60400796, 43.40272689, 41.59513807]), 'fit_time': array([28.23046303, 30.15246701, 29.18858385]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.93192887, 249.99799013, 249.9742589 ]), 'fit_time': array([218.5602591 , 218.81559491, 240.64349294]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([251.1373179 , 251.242383  , 251.46015596]), 'fit_time': array([224.70956898, 209.70044708, 227.57607102]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 400)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.60540104, 5.64537597, 5.36342406]), 'fit_time': array([4.75010777, 4.82344103, 4.62520289]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.12456083, 7.20357108, 6.49325705]), 'fit_time': array([5.49628615, 5.62465596, 5.18324399]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.27200317, 43.71502805, 42.35027909]), 'fit_time': array([28.28382993, 30.16723704, 29.34566689]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.76416588, 249.62451911, 249.89177799]), 'fit_time': array([218.54222417, 218.50565004, 240.48867202]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.64616013, 250.95789599, 250.83212614]), 'fit_time': array([224.41838694, 210.07450604, 227.02777791]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 450)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58474803, 5.609761  , 5.35148406]), 'fit_time': array([4.77121997, 4.81250286, 4.60780978]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10705113, 7.18284702, 6.47423601]), 'fit_time': array([5.46995902, 5.60921216, 5.16923189]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.88796306, 42.74968195, 41.71422696]), 'fit_time': array([28.17465305, 30.07429099, 29.15956187]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.96176696, 249.65508294, 249.83842397]), 'fit_time': array([218.53805995, 219.27778697, 240.46909618]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([251.09647417, 250.8245399 , 251.21162605]), 'fit_time': array([224.67502499, 210.17527604, 226.68665004]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58734107, 5.61721396, 5.350348  ]), 'fit_time': array([4.77441192, 4.82473588, 4.61586881]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.11329317, 7.1854651 , 6.48342896]), 'fit_time': array([5.48372579, 5.648     , 5.17758703]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.23907399, 43.21584702, 41.70121408]), 'fit_time': array([28.26195097, 30.10207915, 29.19033289]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([250.05260706, 249.72728086, 249.82170987]), 'fit_time': array([218.60963202, 218.91751194, 240.37095904]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.93353915, 250.74664807, 250.79802084]), 'fit_time': array([224.49659085, 210.27439094, 227.10754704]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 600)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58572197, 5.6111598 , 5.351578  ]), 'fit_time': array([4.73808312, 4.81424403, 4.60732913]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10508204, 7.17909718, 6.47486711]), 'fit_time': array([5.46615314, 5.62313485, 5.17483997]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.99726915, 42.89060283, 41.43224502]), 'fit_time': array([28.24293995, 30.09691215, 29.18116498]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.84637284, 249.77505398, 251.31994891]), 'fit_time': array([218.88190413, 219.69845295, 240.47607493]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.881531  , 250.86324692, 250.76405501]), 'fit_time': array([224.48572302, 210.06041193, 227.08808208]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 700)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58976102, 5.61247802, 5.3552072 ]), 'fit_time': array([4.76511979, 4.81243896, 4.60277295]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10299802, 7.18417478, 6.48002291]), 'fit_time': array([5.46566105, 5.60368514, 5.16670609]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.27803612, 43.25017691, 41.30194998]), 'fit_time': array([28.17485094, 30.08559608, 29.20266294]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.87660503, 249.71495318, 250.22991705]), 'fit_time': array([218.55976701, 218.89949083, 240.30380106]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.87849307, 250.97949505, 250.85075593]), 'fit_time': array([224.58028603, 209.89851093, 226.91148114]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 800)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.59070992, 5.61378384, 5.35185409]), 'fit_time': array([4.80975294, 4.81455517, 4.61609602]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10647798, 7.18193293, 6.48300219]), 'fit_time': array([5.48260689, 5.61188698, 5.17426491]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.76427603, 43.26846695, 41.73723984]), 'fit_time': array([28.20876002, 30.09312916, 29.15406799]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([250.04605293, 249.75251889, 249.84980202]), 'fit_time': array([218.27066302, 219.04619813, 240.36984897]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.77376008, 251.32456994, 250.15388179]), 'fit_time': array([224.44948602, 210.04003215, 226.40964913]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 900)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58867311, 5.61153889, 5.35063195]), 'fit_time': array([4.72566986, 4.80226398, 4.59851003]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.11079192, 7.17832589, 6.47640491]), 'fit_time': array([5.45714903, 5.59258914, 5.158216  ]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.16081786, 42.98269606, 41.29584002]), 'fit_time': array([28.12413597, 30.01311088, 29.11163306]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([249.25219703, 249.28429103, 249.14034605]), 'fit_time': array([226.77456307, 218.59085894, 239.57568908]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([249.94484305, 249.99371386, 250.06431818]), 'fit_time': array([223.95619798, 209.23078609, 226.02862096]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.59096599, 5.61119914, 5.35030413]), 'fit_time': array([4.75393105, 4.79848003, 4.59543586]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10717797, 7.17857885, 6.47620583]), 'fit_time': array([5.45668817, 5.58692002, 5.15339017]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.77167296, 42.85821509, 41.18011808]), 'fit_time': array([28.08407497, 29.99846697, 29.07931399]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([248.61490393, 248.61654401, 248.55720496]), 'fit_time': array([218.20851111, 217.66716385, 239.12832904]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([249.60673618, 249.73754191, 249.58711815]), 'fit_time': array([223.21860194, 208.81477714, 225.74440503]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1250)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58984113, 5.60679889, 5.343153  ]), 'fit_time': array([4.748492  , 4.78642821, 4.582443  ]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10275197, 7.1769979 , 6.47065306]), 'fit_time': array([5.4403801 , 5.57149601, 5.14042807]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([39.727458  , 42.73108101, 41.68909001]), 'fit_time': array([28.01926184, 29.91354895, 29.00559783]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([248.57708812, 248.4249289 , 248.96413589]), 'fit_time': array([217.20182991, 217.8981781 , 239.68769193]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([249.8000679 , 249.67451692, 249.8308332 ]), 'fit_time': array([223.19109797, 208.75751305, 225.63604283]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1500)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58454585, 5.61161494, 5.34843683]), 'fit_time': array([4.72865915, 4.78863597, 4.58377099]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.09691501, 7.18323803, 6.46634793]), 'fit_time': array([5.44057298, 5.57568908, 5.14232802]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.11330509, 43.9110651 , 42.09575605]), 'fit_time': array([28.08532906, 29.97924304, 29.10968089]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([274.72020578, 279.62682104, 261.16281009]), 'fit_time': array([227.06030011, 219.12604284, 241.72961307]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([250.64128995, 250.52384806, 250.07836318]), 'fit_time': array([263.45324898, 210.90331888, 228.50128388]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 1750)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58607984, 5.61124086, 5.34939313]), 'fit_time': array([4.71700215, 4.77304411, 4.56970382]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10211515, 7.17932105, 6.4730041 ]), 'fit_time': array([5.42578888, 5.56142092, 5.12626886]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.05416203, 43.14499712, 41.49852395]), 'fit_time': array([27.98984289, 29.86105394, 28.92842317]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([247.250458  , 247.35970688, 247.45974398]), 'fit_time': array([216.61223102, 216.7627542 , 238.60755301]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([248.36208081, 248.31739783, 248.42636108]), 'fit_time': array([222.4571681 , 208.21354604, 224.82491493]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 2000)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([5.58551717, 5.615695  , 5.348804  ]), 'fit_time': array([4.70043588, 4.78658509, 4.57454896]), 'test_precision': array([0.75 , 0.625, 0.875]), 'test_f1': array([0.6 , 0.4 , 0.56]), 'test_recall': array([0.5       , 0.29411765, 0.41176471])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([7.10212898, 7.17869306, 6.47777104]), 'fit_time': array([5.42667699, 5.5597291 , 5.12777805]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([40.15979099, 43.10834408, 41.69218898]), 'fit_time': array([27.99797487, 29.84948397, 28.94109011]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([247.44748092, 247.99506688, 247.60825896]), 'fit_time': array([216.68279409, 216.743258  , 238.73523903]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([248.66543984, 248.52585697, 248.73301005]), 'fit_time': array([222.40317297, 208.36360502, 224.75443697]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([6.58181214, 6.26346493, 5.79660988]), 'fit_time': array([5.11160398, 5.05610394, 4.64776707]), 'test_precision': array([0.90909091, 0.8       , 0.875     ]), 'test_f1': array([0.68965517, 0.36363636, 0.56      ]), 'test_recall': array([0.55555556, 0.23529412, 0.41176471])})
('CV for PCA', 4000)
('For C value in rbf', 1)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([9.56724596, 8.76834607, 8.84650588]), 'fit_time': array([7.72920704, 7.60297585, 7.37947297]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([12.40462708, 11.21566081, 10.88244677]), 'fit_time': array([9.51840711, 8.92984319, 8.40637302]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([80.99593687, 85.92440486, 83.07305312]), 'fit_time': array([54.53166008, 57.97684693, 55.98592091]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([483.44644189, 483.63869715, 484.59064698]), 'fit_time': array([417.36709499, 437.75723195, 445.23708606]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([485.01126695, 485.13989282, 484.95067716]), 'fit_time': array([410.08520317, 425.12034512, 419.62224293]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 10)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([10.02180409,  8.7634058 ,  8.96052909]), 'fit_time': array([8.38014579, 7.38859606, 7.46027708]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([13.35997009, 12.59228992, 11.88545012]), 'fit_time': array([10.35986495,  9.95398593,  9.23500896]), 'test_precision': array([1.        , 0.66666667, 1.        ]), 'test_f1': array([0.61538462, 0.2       , 0.45454545]), 'test_recall': array([0.44444444, 0.11764706, 0.29411765])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([83.29873896, 88.80936599, 86.58303094]), 'fit_time': array([56.02621508, 59.92029905, 58.38283706]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([484.31487918, 484.54339814, 483.54473591]), 'fit_time': array([420.54508591, 420.56051898, 462.32869315]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([485.37711406, 484.46605206, 485.17254496]), 'fit_time': array([430.983073  , 410.82912493, 435.31894994]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 50)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([10.13037109,  8.81020498,  8.96281099]), 'fit_time': array([8.65190196, 7.57808304, 7.6483531 ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.38095238]), 'test_recall': array([0.05555556, 0.05882353, 0.23529412])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([14.06009316, 14.45474315, 12.64265418]), 'fit_time': array([10.657552  , 11.19996595,  9.71224999]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]), 'test_recall': array([0.5       , 0.17647059, 0.35294118])})
('For C value in rgf with Gamma: ', 0.01)
('Variable C in RBF', {'score_time': array([83.29411197, 88.78975511, 86.49397612]), 'fit_time': array([56.10581398, 59.87434101, 58.295187  ]), 'test_precision': array([1., 1., 1.]), 'test_f1': array([0.10526316, 0.11111111, 0.21052632]), 'test_recall': array([0.05555556, 0.05882353, 0.11764706])})
('For C value in rgf with Gamma: ', 0.1)
('Variable C in RBF', {'score_time': array([484.29025698, 483.29166412, 483.84856892]), 'fit_time': array([420.383775  , 421.10313201, 462.19208097]), 'test_precision': array([1., 0., 1.]), 'test_f1': array([0.10526316, 0.        , 0.11111111]), 'test_recall': array([0.05555556, 0.        , 0.05882353])})
('For C value in rgf with Gamma: ', 1)
('Variable C in RBF', {'score_time': array([484.61219501, 485.12435484, 485.59516406]), 'fit_time': array([431.39895105, 411.10861111, 435.54635596]), 'test_precision': array([0., 0., 0.]), 'test_f1': array([0., 0., 0.]), 'test_recall': array([0., 0., 0.])})
('For C value in rbf', 100)
('For C value in rgf with Gamma: ', 0.0001)
('Variable C in RBF', {'score_time': array([10.48485589,  9.56810617,  8.9635849 ]), 'fit_time': array([9.12972713, 8.20027089, 7.84177613]), 'test_precision': array([1. , 0.8, 1. ]), 'test_f1': array([0.61538462, 0.36363636, 0.52173913]), 'test_recall': array([0.44444444, 0.23529412, 0.35294118])})
('For C value in rgf with Gamma: ', 0.001)
('Variable C in RBF', {'score_time': array([14.06684494, 14.45858908, 12.63757706]), 'fit_time': array([10.66087389, 11.20518303,  9.71562696]), 'test_precision': array([1.  , 0.75, 1.  ]), 'test_f1': array([0.66666667, 0.28571429, 0.52173913]),